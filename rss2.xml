<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>小金的学习日志</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>希望现在的自己配得上所期望的生活</description>
    <pubDate>Sat, 25 Mar 2023 08:13:03 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>通信总线</title>
      <link>http://example.com/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/</link>
      <guid>http://example.com/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/</guid>
      <pubDate>Sun, 05 Mar 2023 14:07:08 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;总线协议&quot;&gt;&lt;a href=&quot;#总线协议&quot; class=&quot;headerlink&quot; title=&quot;总线协议&quot;&gt;&lt;/a&gt;总线协议&lt;/h2&gt;&lt;p&gt;并行：同一时间总线能发若干个位数的数据&lt;/p&gt;
&lt;p&gt;串行：同一时间总线只发一位的数据，并一直维持这种传送方式&lt;/p&gt;
&lt;p&gt;单工：A只能给B传送数据&lt;/p&gt;
&lt;p&gt;双工：A可以给B传送数据，也可以从B接受数据&lt;/p&gt;
&lt;p&gt;半双工：接收数据，传送数据不能同时进行&lt;/p&gt;
&lt;p&gt;全双工：接收，传输可以同时进行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;波特率：串口通信速度(BPS)，每秒钟能传送位数的个数&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;串口&quot;&gt;&lt;a href=&quot;#串口&quot; class=&quot;headerlink&quot; title=&quot;串口&quot;&gt;&lt;/a&gt;串口&lt;/h3&gt;&lt;p&gt;串行通信接口(COM)：一次最多可以发送一个字节，发送多个字节必须先发送一个字节停止，再起始发送另一个字节&lt;/p&gt;
&lt;p&gt;其中有公头和母头之分&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;串行：计算机总线或其他数据传送线上，一次只传送一位元数据，并连续进行以上传送方式，防止累计误差的出现&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;并行：计算机总线或其他数据传送线上，一次传送多位元数据，速度比串行快&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;异步通信：发送数据方与接受数据方的时钟不一样&lt;/p&gt;
&lt;p&gt;同步通信：发送与接受方时钟相同&lt;/p&gt;
&lt;h3 id=&quot;UART&quot;&gt;&lt;a href=&quot;#UART&quot; class=&quot;headerlink&quot; title=&quot;UART&quot;&gt;&lt;/a&gt;UART&lt;/h3&gt;&lt;p&gt;通用异步收发器，串行，异步通用总线，有两条线，一个对外发送，一个对外接受，属于全双工通信线路&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接收器与发送器波特率误差不能超过百分之10&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;帧格式&quot;&gt;&lt;a href=&quot;#帧格式&quot; class=&quot;headerlink&quot; title=&quot;帧格式&quot;&gt;&lt;/a&gt;帧格式&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230226144803956.png&quot; alt=&quot;image-20230226144803956&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;起始位，数据位，校验位（可有可无），停止位（1或2位）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;检验过程：检测数据位中1的个数，1若为偶数个则校验位为1，只能检查是否有错误，不能修正错误&lt;/p&gt;
&lt;p&gt;校验位加数据位中1的个数为偶数为偶校验，否则为奇校验&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TXD：发送数据口&lt;/li&gt;
&lt;li&gt;RXD：接收数据口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;电气接口不统一，不同器件的高低电平标准不一样&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;抗干扰能力差&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据传输距离短&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="总线协议"><a href="#总线协议" class="headerlink" title="总线协议"></a>总线协议</h2><p>并行：同一时间总线能发若干个位数的数据</p><p>串行：同一时间总线只发一位的数据，并一直维持这种传送方式</p><p>单工：A只能给B传送数据</p><p>双工：A可以给B传送数据，也可以从B接受数据</p><p>半双工：接收数据，传送数据不能同时进行</p><p>全双工：接收，传输可以同时进行</p><p><strong>波特率：串口通信速度(BPS)，每秒钟能传送位数的个数</strong></p><h3 id="串口"><a href="#串口" class="headerlink" title="串口"></a>串口</h3><p>串行通信接口(COM)：一次最多可以发送一个字节，发送多个字节必须先发送一个字节停止，再起始发送另一个字节</p><p>其中有公头和母头之分</p><p><strong>串行：计算机总线或其他数据传送线上，一次只传送一位元数据，并连续进行以上传送方式，防止累计误差的出现</strong></p><p><strong>并行：计算机总线或其他数据传送线上，一次传送多位元数据，速度比串行快</strong></p><p>异步通信：发送数据方与接受数据方的时钟不一样</p><p>同步通信：发送与接受方时钟相同</p><h3 id="UART"><a href="#UART" class="headerlink" title="UART"></a>UART</h3><p>通用异步收发器，串行，异步通用总线，有两条线，一个对外发送，一个对外接受，属于全双工通信线路</p><p><strong>接收器与发送器波特率误差不能超过百分之10</strong></p><h4 id="帧格式"><a href="#帧格式" class="headerlink" title="帧格式"></a>帧格式</h4><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230226144803956.png" alt="image-20230226144803956"></p><p><strong>起始位，数据位，校验位（可有可无），停止位（1或2位）</strong></p><p>检验过程：检测数据位中1的个数，1若为偶数个则校验位为1，只能检查是否有错误，不能修正错误</p><p>校验位加数据位中1的个数为偶数为偶校验，否则为奇校验</p><ul><li>TXD：发送数据口</li><li>RXD：接收数据口</li></ul><p>缺点：</p><ul><li><strong>电气接口不统一，不同器件的高低电平标准不一样</strong></li><li><strong>抗干扰能力差</strong></li><li><strong>数据传输距离短</strong></li></ul><span id="more"></span><h3 id="I2C总线协议（先发高位后发低位）"><a href="#I2C总线协议（先发高位后发低位）" class="headerlink" title="I2C总线协议（先发高位后发低位）"></a>I2C总线协议（先发高位后发低位）</h3><p>由两条线构成，一个SCK（串行时钟线），一个SDA（串行数据线）</p><p>特点：</p><ul><li>SDA传输高位先传，一次传8BIT（一个字节），传送一个字节之后接一个ACK&#x2F;NACK位</li><li>支持多主控，但同一时间只有一个主控</li><li>连接到总线的所有从机都有一个独立的7位地址，用来主机识别从机</li><li>总线空闲时需要加上拉电阻使其变为高电平</li><li>SDA与SCK是线与关系，有一个为低电平即都为低电平</li><li>多个主机同时使用总线时，需要仲裁的方式觉得哪个主机使用</li></ul><p>起始信号：</p><ul><li>SCL为高时，SDA从1变为0</li></ul><p>结束信号</p><ul><li>SCL为高时，SDA从变一</li></ul><p><strong>只有当SCL为0时，才会允许主机将要发送的数据写入SDA，SCL为1时，接收器读取数据</strong></p><p><strong>传输完8位数据后，第九位为ACK&#x2F;NACK，代表应答信号和非应答信号</strong></p><p>等数据接收完毕后，主机发送向从机发送一个NACK信号，告诉从机不要再发送信号了，之后再发送一个停止信号，释放总线</p><h4 id="对中断的处理"><a href="#对中断的处理" class="headerlink" title="对中断的处理"></a>对中断的处理</h4><p>从机对中断的处理为，将SCL总线拉低，使其进入等待状态，等准备完毕后，再将SCL拉高，使主机就绪</p><h4 id="主机发送数据流程"><a href="#主机发送数据流程" class="headerlink" title="主机发送数据流程"></a>主机发送数据流程</h4><ol><li>主机检测到主线空闲（SCK,SAD都为高电平），发送一个起始信号</li><li>主机发送一个8位数据（7位地址+R&#x2F;W读写位），<strong>R&#x2F;W位0时位写，R&#x2F;W为1时为读</strong></li><li>从机收到命令后，发送一个ACK（<strong>对SDA拉低代表应答</strong>）</li><li>主机接受之后发送第一个字节数据</li><li>从机受到后继续发送一个ACK</li><li>直到主机发送到最后一个字节时，并且受到从机ACK后，发送一个停止信号，结束通信</li></ol><h4 id="主机接受数据流程"><a href="#主机接受数据流程" class="headerlink" title="主机接受数据流程"></a>主机接受数据流程</h4><ol><li>主机开始发送信号，发送命令字节（7位地址+R&#x2F;W位&#x3D;1）</li><li>从机接收信号，发送一个字节数据</li><li>主机收到一个字节数据，发送一个ack</li><li>直到接收到最后一个数据，主机向从机发一个NACK（表示上一个字节接收完毕，下一个字节不要再发了），从机接收到信号之后停止传送数据</li><li>主机再发送一个停止信号，结束信号，退出总线</li></ol><h4 id="主机的仲裁流程"><a href="#主机的仲裁流程" class="headerlink" title="主机的仲裁流程"></a>主机的仲裁流程</h4><p>主机通过检测自身的SDA信号是否与总线SDA信号相同，来判断是否发生总线冲突，第一个使SDA从高电平跳至低电平的主机获得总线控</p><p>制权</p><h3 id="I2C时钟同步"><a href="#I2C时钟同步" class="headerlink" title="I2C时钟同步"></a>I2C时钟同步</h3><p><strong>SCL线的低电平周期与线路器件中低电平最长的周期相等</strong></p><p><strong>SCL线的高电平由高电平时钟周期最短的器件保持</strong></p><h4 id="相关硬件知识"><a href="#相关硬件知识" class="headerlink" title="相关硬件知识"></a>相关硬件知识</h4><ul><li>I2C总线相当于OD(开漏)，因为输出为高阻态，所以要加上拉电平将其拉到高电平确定输出</li><li>上拉电阻的最小值由上拉源确定，上拉电阻的最大值由总线电容决定</li></ul><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230226013807179.png" alt="image-20230226013807179"></p><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230226013824207.png" alt="image-20230226013824207"></p><ul><li>I2C总线串联保护电阻，抑制干扰脉冲进入电路，选值一般都很小</li></ul><h3 id="RS232"><a href="#RS232" class="headerlink" title="RS232"></a>RS232</h3><p>再UART协议的基准上，对其做了相应的电器标准</p><ul><li>规定采用标准的连接器，对每个引脚的作用，以及信号的电平做了规定</li></ul><p>规定的逻辑电平</p><ul><li>高电平：-5V ~  -15V为逻辑电平1</li><li>低电平:   5V  ~  15V为逻辑电平0</li></ul><p>缺点”</p><ul><li>接口的信号电平值比较高，容易烧毁芯片，又因为与TTL电平不兼容，所以要接232电平转换芯片</li><li>通信速度比较低，无法应用在高速场合</li><li>易产生共模干扰，抗噪声比较弱</li><li>传输距离比较短</li></ul><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230316204559533.png" alt="image-20230316204559533"></p><h3 id="RS485"><a href="#RS485" class="headerlink" title="RS485"></a>RS485</h3><p><strong>半双工的工作方式</strong></p><p>类似RS232，也是一个电气标准，为了<strong>解决远距离条件，噪声大条件下信号的传输能力</strong>，该标准<strong>允许连接多个收发器</strong></p><p>信号：</p><p><strong>差分信号</strong>：通过两根线上电压去做相减，可以抑制共模干扰</p><p>规定采用<strong>差分信号</strong>进行数据传输，两线间的电压差达到**+2V到+6V<strong>时为逻辑电平1，两线间电压差再</strong>-2V到-6V**之间为逻辑电平0</p><p><strong>发送时同样需要将TTL转485，接收时要485转TTL</strong></p><p>优点：</p><ul><li>接口信号值电压较低</li><li>可以抑制共模干扰</li><li>可以组成网络</li><li>通信速度快</li></ul><h3 id="SPI总线（串行外设接口）先发高位后发低位"><a href="#SPI总线（串行外设接口）先发高位后发低位" class="headerlink" title="SPI总线（串行外设接口）先发高位后发低位"></a>SPI总线（串行外设接口）先发高位后发低位</h3><p>高速的，全双工的，同步的串行通信总线</p><p>一共有4根线：</p><ul><li>MISO(主机输入从机输出)</li><li>MOSI（主机输出从机输入）</li><li>SCLK（时钟信号）</li><li>CS（片选信号）：主机发送使能信号确定响应的从机，可以用多条线，用来响应不同的从机，对应电平由从机确定，发送完使能信号之后，其他不响应的从机仍要发一个使能信号，如果响应高电平，就发送低电平</li></ul><p><strong>与I2C区别，发送完一个字节的数据之后不需要应答信号即可发送下一个信号，发送时如果上升沿发送数据，下降沿就接收数据，没有起始信号，停止信号，应答信号</strong></p><h4 id="极性和相位"><a href="#极性和相位" class="headerlink" title="极性和相位"></a>极性和相位</h4><p>SPI总线有四种不同的工作方式取决于极性(CPOL)和相位(CPHA)</p><p>CPOL表示SCLK空闲时的状态</p><ul><li>CPOL&#x3D;0时表示SCLK空闲时为低电平</li><li>CPOL&#x3D;1时表示SCLK空闲时为高电平</li></ul><p>CPHA表示接收信号的时机</p><ul><li>CPHA&#x3D;0时表示第一个时钟沿接收信号</li><li>CPHA&#x3D;1表示第二个时钟沿接收信号</li></ul><p>与I2C的相同：</p><ul><li>均采用同步，串行方式</li><li>均采用TTL电平</li><li>均采用主从方式工作</li></ul><p>与I2C的区别：</p><ul><li>I2C通过从机地址确定工作的从机，SPI通过发送使能信号唤醒从机</li><li>I2C时钟的极性和相位是固定的，SPI是可调的</li><li>I2C有应答机制，SPI无应答机制</li><li>I2C是半双工，spi是全双工</li></ul><h3 id="USB"><a href="#USB" class="headerlink" title="USB"></a>USB</h3><p><strong>一共有4条线，分别为：Vbus，D+，D-，GND</strong></p><p><strong>反向不归零编码(NRZI):用信号电平翻转代表0，信号电平保持代表1，这种编码方式既可以保证数据传输的完整性，也不需要传输过程中包含独立的时钟,但是信号电平长时间保持时，会导致接收器丢失同步信号，所以在信号电平保持最长6个周期后，会将信号电平强制反转，保证时钟周期的同步，而接收器会扔掉自动翻转的0电平，不会对数据传输产生干扰</strong></p><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230316202917950.png" alt="image-20230316202917950"></p><p>USB只允许有一个主机。可分为3个不同的模块</p><ul><li>客户软件：负责USB设备的通信，以实现其功能，不能直接访问USB设备，必须通过系统软件与总线接口进行访问，包括USB设备驱动程序和界面应用程序</li><li>USB系统软件：负责USB逻辑设备进行配置通信，同时管理客户软件启动的数据传输，包括USB总线驱动程序和USB主控制器驱动程序</li><li>USB总线接口：包括主控制器和根集线器，主控制器负责完成数据的传输，根集线器负责给usb系统提供一个或多个连接点</li></ul><p>USB设备主要有3个不同模块</p><ul><li>USB总线接口：是USB设备中的串行接口引擎</li><li>USB逻辑设备：被USB系统软件看成是一个端点的集合</li><li>功能单元：被客户软件看成是一个接口的集合</li></ul><p>他包括</p><ul><li>配置描述符</li><li>设备描述符</li><li>接口描述符</li><li>端点描述符</li><li>字符串描述符</li></ul><p><strong>设备：一个USB设备有一个或多个配置组成，但一定只有一个设备描述符</strong></p><p><strong>配置：USB设备的每一个配置都必须包含一个配置描述符</strong></p><p><strong>接口：一个配置可以由一个或多个接口组成，每一个接口必须由接口描述符组成</strong></p><p><strong>端点：是用于主机在各个USB设备中进行数据传输（0号端点可以支持输入或输出，但一般用于控制传输)</strong></p><p><strong>管道：与端点一一对应，一个设备有多少端点，通信时就可以用多少管道，通信时相互独立，传输方式由端点决定</strong></p><h4 id="USB拓扑结构"><a href="#USB拓扑结构" class="headerlink" title="USB拓扑结构"></a>USB拓扑结构</h4><p>USB主要有主机，集线器构成</p><p>拓扑结构中有3种元素</p><ul><li>主机</li><li>HUB（集线器）</li><li>设备</li></ul><p>最顶层为主机，连接到下一层的集线器，下一层的集线器再连接到更下一层的集线器与设备，如下图所示</p><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230228173759767.png" alt="image-20230228173759767"></p><h4 id="当一个设备从集线器上接入时"><a href="#当一个设备从集线器上接入时" class="headerlink" title="当一个设备从集线器上接入时"></a>当一个设备从集线器上接入时</h4><ul><li>主机会检测到集线器状态的改变，发出一个命令使该端口有效并进行设置</li><li>设备接收到命令，进行响应，主机收到设备的响应，了解该设备用哪种驱动程序，并分配给其一个唯一的地址</li><li>主机发送内部设置请求</li></ul><h4 id="当一个设备从集线器上移除时"><a href="#当一个设备从集线器上移除时" class="headerlink" title="当一个设备从集线器上移除时"></a>当一个设备从集线器上移除时</h4><p>主线将其从可用资源列表上删除</p><h4 id="通信协议"><a href="#通信协议" class="headerlink" title="通信协议"></a>通信协议</h4><p>由包组成，一个包中由：</p><ul><li>同步字段：使USB设备与总线的包传输速率同步，固定为00000001</li><li>PID字段：用来表示数据封包的类型（令牌，数据，握手，特殊）</li></ul><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230228175742798.png" alt="image-20230228175742798"></p><ul><li>数据字段：用来携带传输的数据，内容长度根据标识符，传输类型的不同而不同，先传低位，后传高位</li></ul><ol><li>分为ADDR数据域：由7位组成，用来寻址</li><li>ENDP数据域：由4位组成，寻址32个端点，端点1作为中断传输模式</li><li>帧序列号：当PID为SOF时，必须时一个11位的帧序列号，由主机产生，每产生一个加一，最大为0x7FF，最大时归0</li><li>数据：</li></ol><ul><li>CRC字段：循环冗余码，重要的信息由CRC16组成，其余的信息由CRC5组成</li><li>包结尾字段</li></ul><p>数据包的格式：</p><ul><li><p>令牌包：定义了传输数据的类型，是事务处理的第一个阶段，由IN,OUT,SETUP三个令牌包，分别为主机输入，主机输出作用，</p><p>与其他区别，除了PID,SYNC以及CRC5以外，由ENDP，ADDR两个字段</p></li><li><p>数据包：必须以8个字节为单位</p></li><li><p>握手包：仅包含一个数据域：一个SYNC字段，两个PID字段</p></li></ul><h4 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h4><p><strong>USB上一次信息接收或发送的过程称为事务</strong></p><p>类型包括：</p><ul><li>IN输入事务处理</li><li>OUT输出事务处理</li><li>SETUP设置事务处理</li></ul><p>输入事务时：</p><ul><li>主机发送一个令牌信息包</li><li>从机接收到后，如果设备正常运行，则发送一个数据包，若设备忙或设备出错，则发送一个握手包（NACK或STALL）</li><li>主机接收到后则回应一个握手包（ACK）</li></ul><p>输出事务时</p><ul><li>主机发送一个令牌信息包</li><li>紧接着主机再发送一个数据包</li><li>从机接收到后发送一个握手包（ACK），若设备忙或出错时则发送NACK或STALL握手包</li></ul><p>设置事务时与输出事务过程相同</p><p><strong>再USB当中，有4种传输类型</strong></p><ul><li>控制传输</li><li>中断传输</li><li>批量传输</li><li>同步传输</li></ul><h5 id="控制传输"><a href="#控制传输" class="headerlink" title="控制传输"></a>控制传输</h5><p>控制传输有2到3个阶段组成</p><ul><li>建立阶段（Setup）：主机从USB获取设备配置信息，并设置设备的配置值，数据交换包含了令牌包，数据包，握手包，它的作用是执行了一个设置的数据交换，并定义此次控制传输的内容</li><li>数据阶段（DATA）：根据数据阶段的数据传输方向，控制传输又可以分为3种：控制读取（读取USB描述符），控制写入（配置USB设备），无数据控制</li></ul><p>其中控制读取：</p><p>是将数据从设备读取到主机上，读取的数据是USB设备描述符，主机先发送一个IN令牌信息包，从机接收到后发送一个数据包，主机根据情况发送一个握手包，（ACK,NACK,STALL）</p><p>控制写入：</p><p>将数据从主机读取到设备上，数据为主机对USB的配置信息，主机先发送一个OUT令牌包，在发送数据包，设备最后发送握手包</p><ul><li>状态阶段（STATUS）：表示整个传输的过程已经完成，状态阶段的传输方向必须与数据阶段的方向相反</li></ul><p>每个阶段都由一个或多个事务组成</p><h5 id="批量传输"><a href="#批量传输" class="headerlink" title="批量传输"></a>批量传输</h5><ul><li>用于传输大量数据，保证数据不能出错，但对时间没有太大的要求</li><li>批量传输是可靠的传输，需要握手包来表明传输的结果，若数据量比较大，则会采用批量传输来完成全部数据的传输，其中PID会以翻转的形式传输如DATA0-DATA1-DATA0-DATA1，以保证发送端与接收端同步</li><li>USB允许连续3次以下的错误，如果连续发生错误后成功传输，则错误次数清零，当错误超过3次后，认为该端点功能错误，放弃传输</li><li>一次批量传输是指一次或多次批量事务传输</li><li>翻转同步：只有成功的事务传送才会使其翻转，否则会重新尝试本次传输</li></ul><h5 id="中断传输"><a href="#中断传输" class="headerlink" title="中断传输"></a>中断传输</h5><p>中断传输由IN事务和OUT事务组成</p><p>除流程上不支持PING以外，其他过程与批量传输相同，中断传输优先级较高，仅次于同步传输</p><p>中断传输总是用于对设备的查询，以确保是否有数据需要传输</p><h5 id="中断传输-1"><a href="#中断传输-1" class="headerlink" title="中断传输"></a>中断传输</h5><p>由两种包组成</p><ul><li>token</li><li>data</li></ul><p>不支持handshake和重传，因此他不可靠</p><p>他在传输中有着最高的优先级</p><p>同步传输适用于必须以固定速率抵达或在指定时刻抵达，可以容忍偶尔错误的数据上</p><h4 id="USB2-0的电路设计及保护"><a href="#USB2-0的电路设计及保护" class="headerlink" title="USB2.0的电路设计及保护"></a>USB2.0的电路设计及保护</h4><ul><li><p>L1为滤波磁珠，用于滤除电源上的干扰，磁珠阻抗选择范围为100Ω&#x2F;100MHz~1000Ω&#x2F;100MHz，典型值取600Ω&#x2F;100MHz，磁珠在选取时通流量应符合电路电流的要求；</p></li><li><p>L2为共模滤波电感，用于滤除差分信号上的共模干扰，磁珠阻抗选择范围为60Ω&#x2F;100MHz~120Ω&#x2F;100MHz，典型值取90Ω&#x2F;100MHz；</p></li><li><p>C1、C2为电源滤波电容，用于滤除电源上的干扰。C1、C2两个电容在取值上要相差100倍，典型值为10uF+0.1uF；小电容用于滤除电源上的高频干扰，大电容用于滤除电源线上的纹波干扰；</p></li><li><p>C3为接口地和数字地之间的跨接电容，典型值为1000pF&#x2F;2KV，容值也可根据实际测试情况进行调整；</p></li></ul><p><a href="https://img2020.cnblogs.com/blog/1298558/202010/1298558-20201020212713032-149768353.png"><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/1298558-20201020212713032-149768353.png" alt="img"></a></p><p>其中D1,D2,D3为TVS，帮助快速泄放静电干扰</p><h2 id="CAN总线"><a href="#CAN总线" class="headerlink" title="CAN总线"></a>CAN总线</h2><p>采用差分线，分别为CAN_H与CAN_L，信号在上面实现差分传输，其中两个线之间要连接一个120Ω的电阻，<strong>因为电缆的特性阻抗为120Ω，为了模拟传输距离无限远</strong></p><h3 id="芯片结构"><a href="#芯片结构" class="headerlink" title="芯片结构"></a>芯片结构</h3><p>CAN总线芯片为8引脚，除电源，地接口以外，还有RXD，TXD与CAN_H，CAN_L与S（模式选择引脚，分为高速模式和静音模式）和Vio（参考电压输出引脚）</p><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230324110527357.png" alt="image-20230324110527357"></p><h3 id="编码方式"><a href="#编码方式" class="headerlink" title="编码方式"></a>编码方式</h3><p>CAN总线采用不归零码位填充方式：隐形电平为0，显性电平为1</p><ul><li>静电平：即当两条差分线上的信号电压大小相等时</li><li>显性&#x2F;隐形电平：有信号发送时，CAN_H拉高一1V，CAN_L拉低1V产生电压差即为显性电平</li></ul><p>大概的压差范围：</p><p>电平差值</p><ul><li>大于0.9V时，为显性电平，表示逻辑0</li><li>小于0.5V时，为隐形电平，表示逻辑1</li></ul><p>发送接收过程</p><ul><li>接收过程</li></ul><p>CAN控制器通过CPU传来的电压信号转换成相应的逻辑电平，CAN收发器接收到控制器传来的信号之后再转换成相应的差分电平</p><ul><li>发送过程</li></ul><p>CAN收发器通过接收差分线的差分电平，将电平转换成逻辑电平，逻辑电平发送给控制器转换成相应的信号发送给cpu</p><h3 id="CAN传送数据的帧格式"><a href="#CAN传送数据的帧格式" class="headerlink" title="CAN传送数据的帧格式"></a>CAN传送数据的帧格式</h3><p>分为五种不同的帧格式，分别为：数据帧，远程帧，错误帧，过载帧，帧间隔</p><h4 id="数据帧"><a href="#数据帧" class="headerlink" title="数据帧"></a>数据帧</h4><p><strong>数据帧：可分为标准帧（2.0A），扩展帧（2.0B）</strong></p><p>具体的帧结构：</p><ul><li>帧起始：由一个低电平组成（显性位）</li><li>仲裁段：采用标识符的逐位仲裁法去减少总线访问冲突的可能</li></ul><p>通过识别不同节点的电平与总线电平是否相同（CAN总线是线与关系），来判断哪个节点使用总线，总线中有一个是显性，则总线是显性</p><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230324124436206.png" alt="image-20230324124436206"></p><p>帧ID越小，优先级越高，一般来说，数据帧优先级高于远程帧，标准格式优先级高于扩展模式</p><p>标准模式与扩展模式相比。多了19位ID，多了两个帧格式，一个为替代远程帧的SRR，另一个为扩展帧标识符，标准格式此标识符在控制段种，为显性，扩展模式此帧在仲裁段中，表示隐形</p><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230325143632144.png" alt="image-20230325143632144"></p><p>其中RTR位表明该请求是数据帧还是请求帧，请求帧没有数据段</p><ul><li>控制段：标准格式中包含IDE（识别符扩展位，判断是标准格式还是扩展格式），r0预留位（扩展使用），DLC表明后面数据段的长度</li><li>数据段：数据帧传输的数据量位0-8个字节，数据量小，发送时间短，传输时先传高位</li></ul><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230325143825024.png" alt="image-20230325143825024"></p><ul><li>CRC段：检测数据错误的循环冗余检测</li><li>ACK段：发送站发送两位均为隐形电平，接收站发送一个显性电平即逻辑0覆盖它</li><li>帧结束（由7个高电平组成，隐形电平）</li></ul><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230324124042541.png" alt="image-20230324124042541"></p><p>不同帧数的优先级：帧ID越小，优先级越高 </p><h4 id="远程帧"><a href="#远程帧" class="headerlink" title="远程帧"></a><strong>远程帧</strong></h4><p>为没有数据段的数据帧，在仲裁段上有所不同，冲裁端上的SRR，RTR都为隐形电平，即逻辑1，因为为隐形电平，所以在优先级上，数据帧的优先级大于远程帧</p><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230325151246411.png" alt="image-20230325151246411"></p><h4 id="错误帧"><a href="#错误帧" class="headerlink" title="错误帧"></a>错误帧</h4><p>一共有五种错误类型</p><ul><li>CRC错误</li><li>应答错误</li><li>格式错误</li><li>位发送错误</li><li>位填充错误</li></ul><p>当出现错误时，他的帧结构为：错误标志，错误界定符</p><p>一共有14个电位，分为6+8</p><ul><li>错误标志：表示该错误为主动还是被动，主动时为6个显性电平位，被动时为6个隐形电平位</li><li>错误界定符：位8个隐形电平位</li></ul><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230325152939156.png" alt="image-20230325152939156"></p><p>为防止错误帧由于自身原因一直发送，内部含发送接收错误计数器，当计数器到达一定值时，会使总线关闭</p><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230325152032199.png" alt="image-20230325152032199"></p><h4 id="过载帧与帧间隔"><a href="#过载帧与帧间隔" class="headerlink" title="过载帧与帧间隔"></a>过载帧与帧间隔</h4><p>大体上是为了将不同的帧间隔开</p><ul><li>过载帧：表示当前节点没有做好接收下一个数据的准备时发送的</li></ul><p>分为：过载标志（6个显性电平），过载帧界定符（8个隐形电平位）</p><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230325152403262.png" alt="image-20230325152403262"></p><ul><li>帧间隔：是为了将数据帧或远程帧与其他不同的帧分离开，错误帧和过载帧没有帧间隔分割</li></ul><p>帧间隔后如果没有节点发送帧，则主线进入空闲状态</p><p>如果有节点发送帧，则先进行一个8位隐形电平的传输延迟再发送</p><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230325152345657.png" alt="image-20230325152345657"></p><h2 id="LIN总线"><a href="#LIN总线" class="headerlink" title="LIN总线"></a>LIN总线</h2><p>一般作为CAN总线的辅助线使用，一般应用于车窗，车灯，中控锁等，<strong>最多可以和16个slave通信</strong></p><p>LIN总线数据格式基于UART帧格式，是UART的一种特殊情况</p><p>LIN总线与CAN总线的区别</p><ul><li>单线通信，效率较低：类似与I2C总线的SDA数据线，但是没有时钟线，需要靠双方约定的波特率进行通信，类似UART</li><li>主从结构，中心化拓扑：<strong>所有的请求都是由master发起，slave不可以发起请求</strong></li><li>更加轻量级：开发相对于CAN总线比较简单</li></ul><p>数据帧格式：</p><p>主要分为三个部分：Header，Header Response，Response域，一次最多可以传输8字节，但是只可以在2的幂上选择，<strong>比如只能选择一次传送2，4，8字节</strong></p><p><img src="/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/image-20230325160549031.png" alt="image-20230325160549031"></p><ul><li>Header：Break代表数据传输开始，SYNC同步时钟，受保护的ID去进行寻址</li><li>Response space用于区分Header域和请求域</li><li>请求域中除了数据的传输，还包括CheckSum校验位，以及奇偶校验位，检查受保护的ID</li></ul><p>整体流程，master发出protect ID之后，如果有节点可以提供这个ID的服务，那么他就会插入一个应答，与I2C给出的应答类似，这个ID不代表Slave的地址，代表的是想要订阅的报文ID（一个SLAVE从机可以提供多个报文ID）</p><h2 id="PCB-Layout规则"><a href="#PCB-Layout规则" class="headerlink" title="PCB Layout规则"></a>PCB Layout规则</h2><ul><li>以差分式布线，参考面要连续，保证阻抗一致性</li><li>VBUS走线需要能承受1A的电流，以防止过流事件的发生</li><li>D+，D-走线必须等长，长度误差控制在5mil，并且不能走直角，需要钝角或圆弧走线，并且尽量不换层布线</li><li>与其他CLK或差分信号线之间的间距应该在20mil</li><li>保护器件与共模电感尽可能靠近接口</li><li>避免在晶振，晶体，时钟信号发生器周围布线</li></ul>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/">通信总线</category>
      
      
      <category domain="http://example.com/tags/I2C%E3%80%81SPI%E3%80%81UART%E3%80%81RS232%E3%80%81RS485%E3%80%81USB/">I2C、SPI、UART、RS232、RS485、USB</category>
      
      
    </item>
    
    <item>
      <title>毕业设计</title>
      <link>http://example.com/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF%20-%20%E5%89%AF%E6%9C%AC/</link>
      <guid>http://example.com/2023/03/05/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF%20-%20%E5%89%AF%E6%9C%AC/</guid>
      <pubDate>Sun, 05 Mar 2023 14:07:08 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;子工程与父工程&quot;&gt;&lt;a href=&quot;#子工程与父工程&quot; class=&quot;headerlink&quot; title=&quot;子工程与父工程&quot;&gt;&lt;/a&gt;子工程与父工程&lt;/h2&gt;&lt;p&gt;区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;父工程不需要打包，只负责依赖管理&lt;/li&gt;
&lt;li&gt;子模块的聚合和</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="子工程与父工程"><a href="#子工程与父工程" class="headerlink" title="子工程与父工程"></a>子工程与父工程</h2><p>区别：</p><ul><li>父工程不需要打包，只负责依赖管理</li><li>子模块的聚合和继承</li><li>添加通用依赖</li></ul><p>父工程的依赖管理，主要作用为，当子工程启用相关插件时，会优先使用父工程的依赖版本</p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BA%BF/">通信总线</category>
      
      
      <category domain="http://example.com/tags/Springboot-es-rabbitMQ/">Springboot,es,rabbitMQ</category>
      
      
    </item>
    
    <item>
      <title>电力电子技术笔记</title>
      <link>http://example.com/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/</link>
      <guid>http://example.com/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/</guid>
      <pubDate>Sat, 04 Mar 2023 14:07:08 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;晶闸管&quot;&gt;&lt;a href=&quot;#晶闸管&quot; class=&quot;headerlink&quot; title=&quot;晶闸管&quot;&gt;&lt;/a&gt;晶闸管&lt;/h2&gt;&lt;p&gt;为3层PN结结构，有阴极，阳极，控制级&lt;/p&gt;
&lt;p&gt;工作流程；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;阳极与电源相连&lt;/li&gt;
&lt;li&gt;阴极与</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="晶闸管"><a href="#晶闸管" class="headerlink" title="晶闸管"></a>晶闸管</h2><p>为3层PN结结构，有阴极，阳极，控制级</p><p>工作流程；</p><ul><li>阳极与电源相连</li><li>阴极与负载相连</li><li>晶闸管的门级（控制级）与阴极与控制晶闸管的电路相连，它属于半控型元器件</li></ul><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230317104500232.png" alt="image-20230317104500232"></p><p>阳极加上电压后，并不迅速导通，只有当控制级G加上正向电压，使VT1导通，晶闸管才会导通，此时去掉控制级上的电压，晶闸管仍会维持导通状态</p><h2 id="线性稳压器LDO"><a href="#线性稳压器LDO" class="headerlink" title="线性稳压器LDO"></a>线性稳压器LDO</h2><p><strong>线性稳压器分为：采样电路，调整管，放大电路，基准电压</strong></p><p>优点：成本低，噪音小，静态电流小，需要外接的元件也很少，一般只有旁路电容</p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316190634844.png" alt="image-20230316190634844"></p><p>工作原理：输出电压通过采样电阻的分压，与基准电压去比较，输入给误差放大器，控制MOS管关断，其中MOS管可以看作一个滑动变阻器以此来保证输出电压Uo的稳定</p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316191240815.png" alt="image-20230316191240815"></p><p>与DC-DC的区别</p><ul><li>输出电压为固定的</li><li>输入与输出电压差很小，而DC-DC的压差不一定，可以是降压也可以是升压，压差小的原因，压差大会导致流过MOS管，即滑动变阻器的电流变大，导致消耗的功率变高，所以低压差线性稳压器的压差要小</li><li>最大输出电流小，如果输出电流大的话调整管消耗的电流比较大</li><li>可以比较高，但一般来说效率低，DC-DC效率很高，一般在百分之80到百分之90</li><li>成本低，DC-DC成本较高，因为有电阻，电容，电感等器件</li></ul><p>注意78XX，79XX是线性稳压器件，并不是低压差线性稳压器（LDO），其要求输出电压比输入电压高2-3伏</p><p>线性稳压器使用时关于电容的选择：</p><ul><li>输入电容C1应该比输出电容C2大，好处是当输入为0时，由于C1的容量大于C2的容量，这样就避免了C2对稳压器进行反向充电，对稳压器有一定的保护作用</li></ul><h2 id="整流电路"><a href="#整流电路" class="headerlink" title="整流电路"></a>整流电路</h2><p>将交流电整成直流电</p><ul><li>按交流输入相数分为：单相电路和多相电路</li><li>按电路结构分为零式电路和桥式电路，零式又分为半波和全波</li><li>按组成器件分为不可控，半控，全控</li><li>按变压器二次测流的方向是单向还是双向分为单拍电路与双拍电路</li></ul><h3 id="单相半波可控整流电路"><a href="#单相半波可控整流电路" class="headerlink" title="单相半波可控整流电路"></a>单相半波可控整流电路</h3><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316155726993.png" alt="image-20230316155726993"></p><ul><li>触发延迟角：表示从晶闸管开始承受电压到施加触发脉冲的角度，用a表示，也称处发角或控制角</li><li>导通角：表示晶闸管在一个周期处于通态的角度</li></ul><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316160338798.png" alt="image-20230316160338798"></p><p>表示电压在一个周期内，从晶闸管导通后的函数面积除以2Π时间的平均值</p><p>阻感负载的特点：</p><p>电阻两端电流不能突变，对电流变化有抗拒作用</p><p>分析方法</p><ul><li>通过器件的理想化，将电路简化为分段线性电路</li><li>器件的每一种状态对应一种线性电路拓扑</li></ul><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316160757552.png" alt="image-20230316160757552"></p><h2 id="斩波电路"><a href="#斩波电路" class="headerlink" title="斩波电路"></a>斩波电路</h2><p>斩波电路的三种控制方式</p><ul><li><strong>脉冲宽度调制PWM：通过改变导通的时间，从而改变占空比，改变输出电压</strong></li><li><strong>脉冲频率调制PFM：导通时间不变，改变周期时间，从而改变导通占空比去控制输出电压（缺点，导通比的变化范围有限，输出电压，输出电流的谐波频率不固定，不利于设计）</strong></li><li>混合型：同时改变导通时间与周期时间</li></ul><h3 id="直流斩波电路（DC-DC）"><a href="#直流斩波电路（DC-DC）" class="headerlink" title="直流斩波电路（DC-DC）"></a>直流斩波电路（DC-DC）</h3><p>一共有两类斩波电路</p><ul><li>第一类要求输出在一定范围内可以调制</li><li>第二类要求输出在负载变化时，输出电压保持不变</li></ul><p><strong>将直流电变为另一固定电压或可调电压的直流电，一般指直接将直流电变为另一种直流电，不包括直流-交流-直流</strong></p><p>基本斩波电路一共有6种不同的斩波电路</p><ul><li>降压斩波电路</li><li>升压斩波电路</li><li>升降压斩波电路</li><li>CUK斩波电路</li><li>Sepic斩波电路</li><li>Zeta斩波电路</li></ul><h4 id="降压斩波电路（Buck电路）"><a href="#降压斩波电路（Buck电路）" class="headerlink" title="降压斩波电路（Buck电路）"></a>降压斩波电路（Buck电路）</h4><p>隔离型：表示输出的GND与输入的GND无关，也称为悬浮电源</p><p>非隔离型：表示输出的GND与输入的GND为同一GND</p><p>基本概念</p><ul><li>占空比：开通时间与周期的比值，决定了输出电压的平均值</li></ul><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316162541712.png" alt="image-20230316162541712"></p><p>原理：LC组成的低通滤波器，允许直流量通过，隔离谐波分量</p><p>平均电压为，输入电压与占空比相乘所得</p><ul><li><p>开关闭合时，二极管关断，电源通过电感，电阻输出</p></li><li><p>开关闭合式，二极管打开，变为续流二极管，使电感放电</p></li></ul><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316171954456.png" alt="image-20230316171954456"></p><p><strong>设计要求，电感对谐波的阻抗为wL，电容对谐波哦的阻抗为1&#x2F;wC，当电感阻抗远大于电容阻抗时，谐波在电感上产生的压降会远大于电容上产生的压降，这就会使，所得到的输出电压，为我们想要的直流分量，而谐波分量的压降都落在电感两端</strong></p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316164659674.png" alt="image-20230316164659674"></p><p><strong>续流二极管：为输入负半周时，为电感提供放电回路，保护负载</strong></p><p><strong>电感选择较大电感，使电流脉动小，且电流连续，若电感小，电流不连续，则会出现上图图c的情况</strong></p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316171116950.png" alt="image-20230316171116950"></p><p>输出功率与输入功率相同，通过控制PWM占空比，即通过控制开关管V的关断，即可控制输出的平均电压</p><p>工作流程：</p><p>MOS管开启，电源电压通过电感流入负载，并将电能存储在电感，电容中，当MOS管关断时，存储在电感，电容中的电能释放，流出电压通过负载，续流二极管流回电感，因为电路中电压很小，所以发热功率U*I很小，这也是为什么开关电源效率高的原因</p><p>BUCK电流中电容的作用：</p><ul><li>主要起到滤波的作用</li><li>辅助电感给电阻提供能量</li><li></li></ul><p><strong>减少输出电压脉动的方法</strong></p><ul><li><strong>提高开关频率</strong></li><li><strong>加大电感</strong></li><li><strong>加大电容</strong></li></ul><p>保证电感电流连续所需要的条件</p><ul><li><strong>开关频率越高，电感L越大，所需要的负载电流Iok就越小</strong></li></ul><p>缺点：输出噪声较大</p><p>优点：效率高</p><p>BUCK型电源芯片一般包含如下引脚：</p><ul><li>电源输入引脚VIN</li><li>GND</li><li>EN</li><li>SW：电感节点</li><li>FB：基准电压，一般通过分压电阻调节输出电压</li><li>BOOT：如果看到芯片中含有BOOT引脚，一般内部为N-MOS管，需要外接自举电容、</li></ul><p>自举电容原理：</p><p>同步整流的BUCK芯片，两个管无法同时导通，上方的MOS管需要加一个自举电容放电，使上方的MOS管导通，一般使用与占空比较小的电路中</p><p><strong>BUCK电路相关计算，伏秒法则</strong></p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316230030306.png" alt="image-20230316230030306"></p><h4 id="隔离型BUCK变换器（单端正激变换器）"><a href="#隔离型BUCK变换器（单端正激变换器）" class="headerlink" title="隔离型BUCK变换器（单端正激变换器）"></a>隔离型BUCK变换器（单端正激变换器）</h4><p>在传统的BUCK变换器，中间加入了个隔离变压器</p><ul><li>引入了输入电源和负载电压的电气隔离</li><li>匹配输入电压和输出电压</li><li>输出多个不同的直流电压</li></ul><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316181415585.png" alt="image-20230316181415585"></p><p>绿色方框内为传统BUCK电路的开关，右侧为正常电路模型</p><p><strong>单端表示变压器磁通仅在单方面变化</strong></p><p><strong>正激表示电管开关管开启时将能量直接传送给负载</strong></p><h4 id="升压斩波型DC-DC电路（BOOST）"><a href="#升压斩波型DC-DC电路（BOOST）" class="headerlink" title="升压斩波型DC-DC电路（BOOST）"></a>升压斩波型DC-DC电路（BOOST）</h4><p>三种工作方式：</p><ul><li>连续工作方式</li><li>临界连续工作方式</li><li>非连续导通方式</li></ul><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316170011700.png" alt="image-20230316170011700"></p><p>工作流程：</p><ul><li>开关导通时，输入电压流向电感，电感电流线性增加，电感储能增加，电源向电感转移电能，此时负载通过电容C供电</li><li>开关关断时，电感释放能量，与电源同时向电容C，负载供电，提供电能</li></ul><p><strong>二极管的作用，防止在Mos管导通时，电容两端电压释放</strong></p><p><strong>这种工作原理我们称之为泵升原理</strong></p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316174759474.png" alt="image-20230316174759474"></p><p>电压能升高的原因：</p><ul><li>电感中存储电能的泵升作用使输出电压升高</li><li>开关导通时，电容维持负载两端电压</li></ul><p><strong>T导通时，电感电流不能突变，此时电感两端电压左正右负，T截止时，电感电流不能突变，此时电感两端电压右正左负，相当于两个电池串联，实现电压的升高</strong></p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316175742649.png" alt="image-20230316175742649"></p><p><strong>显然，要降低电压纹波，可以增加开关频率，电容量，来降低电压纹波</strong></p><p><strong>电感临界连续电流：</strong></p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316175943922.png" alt="image-20230316175943922"></p><p>缺点：效率不高</p><p>优点：得到的电流较小</p><h5 id="输入输出滤波电容容值计算"><a href="#输入输出滤波电容容值计算" class="headerlink" title="输入输出滤波电容容值计算"></a>输入输出滤波电容容值计算</h5><p>大体思路：先根据电容公式求纹波电压，带入一系列公式后，如占空比，功率欧姆定律，纹波率公式得到所需要纹波率，根据题中给出的纹波率范围，求出电容值</p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230324021734672.png" alt="image-20230324021734672"></p><p><strong>输入滤波电容容值计算：</strong></p><p>在CCM模式下，假定电感的纹波电流全部被输入电容所吸收</p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230324021927789.png" alt="image-20230324021927789"></p><h4 id="升降压斩波电路-Buck-Boost"><a href="#升降压斩波电路-Buck-Boost" class="headerlink" title="升降压斩波电路(Buck-Boost)"></a>升降压斩波电路(Buck-Boost)</h4><p>Buck与Boost的组合，既可以升压，也可以降压，但要注意输出电容的下端为正，基本的Buck，Boost的输出电容都是上端为正</p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316193557967.png" alt="image-20230316193557967"></p><h3 id="同步整流与异步整流"><a href="#同步整流与异步整流" class="headerlink" title="同步整流与异步整流"></a>同步整流与异步整流</h3><p>当功率管断开时，需要用不同的续流元器件进行续流，根据所用到的续流元器件种类的不同，可以分为同步整流与异步整流</p><p>以BUCK电路为例，若电路中只有一个MOS管，续流回路中所用的为二极管续流（不需要外加电路控制器通断），所形成的整流方式则为异步整流，</p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316184204734.png" alt="image-20230316184204734"></p><p>若将续流回路中的二极管替换为MOS管，用额外的开关去控制其关断，则被称为同步整流，因为必须要根据电源的开关时序去同步控制S1,S2的关断</p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316184334671.png" alt="image-20230316184334671"></p><p>异步整流与同步整流的两大区别：</p><ul><li>异步整流所使用的续流元器件为二极管，不需要额外的开关去控制其关断，而同步整流下侧使用的是MOS管，需要使用额外的开关控制器关断，如果S1，S2同步开启或关闭，则Vin会直接流入GND，所以需要一个滞留时间</li><li>在轻负载时，电感电流通过开关变成三角波，当负载电流变得非常少时，电感电流会下降至零交叉级，在此状态下，异步情况，二极管电流只能单向流动，因此橘色波形没有进入负领域的波形电流。同步模式，因为其可逆流，所以波形可以进入负领域，称为连续模式</li></ul><p>异步整流的优缺点：</p><ul><li>二极管两端压降恒定</li><li>效率低：因为二极管两端压降恒定，即使当回路中的电流很大时，二极管两端压降不变，在输出电压很低时，二极管两端所消耗的功率占比就会提高，所以大电流时功率低</li><li>生产成本比较便宜</li><li>可以用在输出电压较高的情况：因为二极管两端电压恒定，所以在输出电压很高的情况下，二极管所消耗的功率比率很降低，效率比较高，并且电路结构比较简单</li></ul><p>同步整流优缺点：</p><ul><li>一般使用的都是导通压降很低的MOS管</li><li>效率较高：因为MOS管的导通压降远小于二极管的导通压降，所以在相同电流时，在MOS管上损耗的功率远小于二极管上损耗的功率，所以效率比较高</li><li>需要额外的控制电路，因为MOS管需要驱动电路，使上下MOS管能同步，而非同步的二极管是自然整流的，不需要额外的控制电路驱动二极管关断</li><li>成本比较高</li></ul><p>所以总体来说，异步整流，同步整流需要考虑不同的点去选择</p><ul><li>效率</li><li>成本</li><li>可靠性：如果两个MOS管导通时间没有控制好，使两个MOS管同时导通，会使下方的控制MOS管损坏，而二极管很稳定</li></ul><p>思考：为什么在开关电源中，开关频率越高，电感越小，开关频率为什么不能太高</p><ul><li>在使用同一电感下，不同的开关频率，根据伏秒平衡，电感所充电的电能与释放的电能要相等，就会导致，在高的开关频率下，电感所需要存储，释放的电感就会小，因此不需要太大的电阻值</li><li>在高的开关频率下，流过开关管的电压与流过开关管的电流会有重合时间，这会导致在开关管上会有电能的损耗，所以开关频率越大，开关损耗就越大</li><li>并且开关有延迟时间，并不是开启之后立即导通，关闭之后立即关断</li></ul><h2 id="PWM控制的基本原理"><a href="#PWM控制的基本原理" class="headerlink" title="PWM控制的基本原理"></a>PWM控制的基本原理</h2><p>基本思想：</p><ul><li>冲量相等而形状不同的窄脉冲，如果加在具有惯性的环节上时，效果基本相同</li></ul><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316183140117.png" alt="image-20230316183140117"></p><p>不同的窄脉冲加在电路中，输出的电流形状基本一致，即为面积等效原理</p><p><strong>利用一组，等幅不等宽的脉冲，去表示一个正弦信号</strong></p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316183428596.png" alt="image-20230316183428596"></p><ul><li>单极性PWM：等幅不等宽的脉冲，在一个半周期内仅有正值或负值</li><li>双极性PWM：等幅不等宽的脉冲，在所有周期，均有正值与负值两种极性</li></ul><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316183711780.png" alt="image-20230316183711780"></p><p>电流型逆变电路进行PWM控制，得到的就是电流型PWM</p><p>电压型逆变电路进行PWM控制，得到的就是电压型PWM</p><h2 id="单端反激式开关电源"><a href="#单端反激式开关电源" class="headerlink" title="单端反激式开关电源"></a>单端反激式开关电源</h2><p>反激式变换器</p><ul><li>由buck-boost变换器推演过来，将电路中的电感与MOS管换成一个隔离变压器，如下图所示</li></ul><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316222728924.png" alt="image-20230316222728924"></p><p>工作原理与Buck-Boost电路基本相似</p><p><strong>当开关管导通时，Vin给变压器种电感充电，此时输出电容放电，为负载提供电压，当开关管断开时，变压器放电，为电容充电的同时，给负载供电</strong></p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316230853235.png" alt="image-20230316230853235"></p><p>相应的计算要掌握，关键点：伏秒平衡</p><p>何为单端反激式开关电源：</p><ul><li>单端：表示磁芯仅工作在磁滞回线的一侧</li><li>反激：表示开关管导通时，输出回路中的二极管截止，初级绕组NP存储能量，当开关断开时，初级绕组的能量通过次级绕组激VD1整流和电容C滤波后向负载输出</li></ul><p>优点：</p><ul><li>结构简单，可以同时输出不同的电压，且有较好的电压调整率</li></ul><p>缺点：</p><ul><li>电压纹波较大，外特性差，适用与固定负载</li></ul><p>原理框图</p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316231608804.png" alt="image-20230316231608804"></p><p>正激与反激的区别</p><p><img src="/2023/03/04/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/image-20230316233239960.png" alt="image-20230316233239960"></p><p>正激指的是在开关管导通时，就已经有电流通过负载</p><p>​        <strong>根据变压器作用的不同来区分</strong></p><ul><li><p>反激：变压器起到隔离电气，电压匹配的作用，同时也起到储能的作用，总体来说，前半部分起到变压器的作用，而后半部分起到电感的作用</p></li><li><p>正激：变压器只起到了变压器的作用，没有起到电感的作用</p><p><strong>工作情况来分：</strong></p></li><li><p>正激：初级线圈工作时，次级线圈也在工作</p></li><li><p>反激：初级线圈工作时，次级线圈没有工作</p></li></ul><p><strong>正激与反激的工作最大区别是，当开关管关断时，正激的输出主要靠储能电感和续流二级管来维持输出，而反激的输出主要靠变压器次级释放能量来维持输出。</strong></p><h2 id="半桥式开关电源"><a href="#半桥式开关电源" class="headerlink" title="半桥式开关电源"></a>半桥式开关电源</h2><h2 id="全桥式开关电源"><a href="#全桥式开关电源" class="headerlink" title="全桥式开关电源"></a>全桥式开关电源</h2><h2 id="推挽式开关电源"><a href="#推挽式开关电源" class="headerlink" title="推挽式开关电源"></a>推挽式开关电源</h2>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E7%94%B5%E5%8A%9B%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/">电力电子技术</category>
      
      
      <category domain="http://example.com/tags/Buck-Boost-Ldo/">Buck,Boost,Ldo</category>
      
      
    </item>
    
    <item>
      <title>模电笔记</title>
      <link>http://example.com/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/</link>
      <guid>http://example.com/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/</guid>
      <pubDate>Thu, 02 Mar 2023 14:07:08 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;电阻&quot;&gt;&lt;a href=&quot;#电阻&quot; class=&quot;headerlink&quot; title=&quot;电阻&quot;&gt;&lt;/a&gt;电阻&lt;/h2&gt;&lt;h3 id=&quot;上拉电阻与下拉电阻&quot;&gt;&lt;a href=&quot;#上拉电阻与下拉电阻&quot; class=&quot;headerlink&quot; title=&quot;上拉电阻与下拉电阻&quot;&gt;&lt;/a&gt;&lt;strong&gt;上拉电阻与下拉电阻&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/image-20230316211019684.png&quot; alt=&quot;image-20230316211019684&quot;&gt;&lt;/p&gt;
&lt;p&gt;上拉电阻：使空闲状态时，电路保持在高电平&lt;/p&gt;
&lt;p&gt;下拉电阻：使空闲状态时，电路保持在低电平&lt;/p&gt;
&lt;h3 id=&quot;电阻的应用&quot;&gt;&lt;a href=&quot;#电阻的应用&quot; class=&quot;headerlink&quot; title=&quot;电阻的应用&quot;&gt;&lt;/a&gt;电阻的应用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;钳位：上下拉电阻，通常不希望高阻态的出现，通常使用上下拉电阻将点位限制在高电平或低电平&lt;/li&gt;
&lt;li&gt;拉电流：如I2C总线中，在总线上增加上拉电阻，增加总线上电流，提高驱动力&lt;/li&gt;
&lt;li&gt;增强抗干扰能力：针对于CMOS芯片中，不使用的引脚常常不会悬空，而是接一个上拉电阻提供协防电路&lt;/li&gt;
&lt;li&gt;阻抗匹配：长距离传输时，阻抗不匹配会引起反射，一般都会串联电阻消除阻抗不匹配&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;计算方法&quot;&gt;&lt;a href=&quot;#计算方法&quot; class=&quot;headerlink&quot; title=&quot;计算方法&quot;&gt;&lt;/a&gt;计算方法&lt;/h3&gt;&lt;p&gt;常用的上拉电阻有4.7K，10K，应该如何选择呢&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上下拉的电阻可以根据阻值的大小，分为强拉和弱拉，拉电阻阻值越小，拉电流能力越强，但是相应的功耗也越大&lt;/li&gt;
&lt;li&gt;在高速电路中，过大的上拉电阻可能会导致信号的上升沿缓慢，过小的上拉电阻可能会导致信号的低电平过高（大于0V，可能会导致低电平被判定为高电平）&lt;/li&gt;
&lt;li&gt;针对于IO口内部带上下拉电阻，可以设置为高低电平模式，或高阻态模式，减小功耗&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;阻值计算&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通常来说，要确保高电平有效，上拉电阻要明显小于负载阻抗，否则会导致输出的高电平不足&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;电阻的最小值要保证电流不能超过场效应管的额定电流&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;计算出最大值和最小值，在中间取值即可，如果低电平要求严格，那么上拉电阻要尽可能的小，如果尽可能考虑低功耗，那么上拉电阻要尽可能大&lt;/p&gt;
&lt;p&gt;上文提到，阻抗不匹配会引起反射，反射的种类一共有4种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;过冲&lt;/li&gt;
&lt;li&gt;振铃&lt;/li&gt;
&lt;li&gt;下冲&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/image-20230317101027940.png&quot; alt=&quot;image-20230317101027940&quot;&gt;&lt;/p&gt;
&lt;p&gt;阻抗匹配的目的是为了减少反射波叠加以避免过冲&lt;/p&gt;
&lt;h2 id=&quot;电容&quot;&gt;&lt;a href=&quot;#电容&quot; class=&quot;headerlink&quot; title=&quot;电容&quot;&gt;&lt;/a&gt;电容&lt;/h2&gt;&lt;p&gt;电容器的串并联分压公式&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;串联公式：C&amp;#x3D;C1C2&amp;#x2F;(C1+C2)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;并联公式C&amp;#x3D;C1+C2+C3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;补充部分：串联分压比V1&amp;#x3D;C2&amp;#x2F;(C1+C2)V…电容越大分得电压越小，交流直流条件下均如此&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;并联分流比I1&amp;#x3D;C1&amp;#x2F;(C1+C2)I…电容越大通过的电流越大&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;电容阻抗与其频率有关，理想情况下频率越高阻抗越小，但实际情况下电容可看作一个电容电感串联的高效电路，因为电感频率越高阻抗越大，所以当频率高于电容谐振频率时，电容实际会表现出电感特性&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R5eDE5OTM=,size_16,color_FFFFFF,t_70.png&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;电容降压&quot;&gt;&lt;a href=&quot;#电容降压&quot; class=&quot;headerlink&quot; title=&quot;电容降压&quot;&gt;&lt;/a&gt;电容降压&lt;/h3&gt;&lt;p&gt;利用电容容抗来取代回路中需要的电阻&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点:减少了降压元件所消耗的功率，既可以降压，又不消耗电能&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实际使用时要注意:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;要为电容提供一个可供其放电的回路，用电阻与电容串联，以防止实际使用后断电时触摸插孔会使电容放电导致触电。&lt;/p&gt;
&lt;p&gt;因负载通常都需要直流，所以回路中一般使用二极管来构成回路，由此衍生出如下两种降压电路&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;半波整流电路&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;电路中串联，并联两个二极管，D1为正半周期给RL提供负载，D2为C1提供放电回路，此时负载的电流为全波整流的一半，负半周期的电能送回给电源&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/20210119113015910.jpeg&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;全波整流电路&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;为组件RL，正半周期都提供了良好的负载，此时负载的电流翻倍&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDQwNzIzOA==,size_16,color_FFFFFF,t_70#pic_center.jpeg&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实际使用时，因为电路开启时，电容相当于短路，需要电容与一个电阻串联，防止后续器件烧伤，串联电阻的电阻值选取标准以后续器件的最小额定电流为准，当然实际情况电压会比额定电压大，所以电阻计算时应视情况而定&lt;/li&gt;
&lt;/ul&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="电阻"><a href="#电阻" class="headerlink" title="电阻"></a>电阻</h2><h3 id="上拉电阻与下拉电阻"><a href="#上拉电阻与下拉电阻" class="headerlink" title="上拉电阻与下拉电阻"></a><strong>上拉电阻与下拉电阻</strong></h3><p><img src="/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/image-20230316211019684.png" alt="image-20230316211019684"></p><p>上拉电阻：使空闲状态时，电路保持在高电平</p><p>下拉电阻：使空闲状态时，电路保持在低电平</p><h3 id="电阻的应用"><a href="#电阻的应用" class="headerlink" title="电阻的应用"></a>电阻的应用</h3><ul><li>钳位：上下拉电阻，通常不希望高阻态的出现，通常使用上下拉电阻将点位限制在高电平或低电平</li><li>拉电流：如I2C总线中，在总线上增加上拉电阻，增加总线上电流，提高驱动力</li><li>增强抗干扰能力：针对于CMOS芯片中，不使用的引脚常常不会悬空，而是接一个上拉电阻提供协防电路</li><li>阻抗匹配：长距离传输时，阻抗不匹配会引起反射，一般都会串联电阻消除阻抗不匹配</li></ul><h3 id="计算方法"><a href="#计算方法" class="headerlink" title="计算方法"></a>计算方法</h3><p>常用的上拉电阻有4.7K，10K，应该如何选择呢</p><ul><li>上下拉的电阻可以根据阻值的大小，分为强拉和弱拉，拉电阻阻值越小，拉电流能力越强，但是相应的功耗也越大</li><li>在高速电路中，过大的上拉电阻可能会导致信号的上升沿缓慢，过小的上拉电阻可能会导致信号的低电平过高（大于0V，可能会导致低电平被判定为高电平）</li><li>针对于IO口内部带上下拉电阻，可以设置为高低电平模式，或高阻态模式，减小功耗</li></ul><p>阻值计算</p><ul><li><p>通常来说，要确保高电平有效，上拉电阻要明显小于负载阻抗，否则会导致输出的高电平不足</p></li><li><p>电阻的最小值要保证电流不能超过场效应管的额定电流</p></li></ul><p>计算出最大值和最小值，在中间取值即可，如果低电平要求严格，那么上拉电阻要尽可能的小，如果尽可能考虑低功耗，那么上拉电阻要尽可能大</p><p>上文提到，阻抗不匹配会引起反射，反射的种类一共有4种：</p><ul><li>过冲</li><li>振铃</li><li>下冲</li></ul><p><img src="/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/image-20230317101027940.png" alt="image-20230317101027940"></p><p>阻抗匹配的目的是为了减少反射波叠加以避免过冲</p><h2 id="电容"><a href="#电容" class="headerlink" title="电容"></a>电容</h2><p>电容器的串并联分压公式</p><p><strong>串联公式：C&#x3D;C1C2&#x2F;(C1+C2)</strong></p><p><strong>并联公式C&#x3D;C1+C2+C3</strong></p><p><strong>补充部分：串联分压比V1&#x3D;C2&#x2F;(C1+C2)V…电容越大分得电压越小，交流直流条件下均如此</strong></p><p><strong>并联分流比I1&#x3D;C1&#x2F;(C1+C2)I…电容越大通过的电流越大</strong></p><p>电容阻抗与其频率有关，理想情况下频率越高阻抗越小，但实际情况下电容可看作一个电容电感串联的高效电路，因为电感频率越高阻抗越大，所以当频率高于电容谐振频率时，电容实际会表现出电感特性</p><p><img src="/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R5eDE5OTM=,size_16,color_FFFFFF,t_70.png" alt="在这里插入图片描述"></p><h3 id="电容降压"><a href="#电容降压" class="headerlink" title="电容降压"></a>电容降压</h3><p>利用电容容抗来取代回路中需要的电阻</p><p><strong>优点:减少了降压元件所消耗的功率，既可以降压，又不消耗电能</strong></p><p><strong>实际使用时要注意:</strong></p><p>要为电容提供一个可供其放电的回路，用电阻与电容串联，以防止实际使用后断电时触摸插孔会使电容放电导致触电。</p><p>因负载通常都需要直流，所以回路中一般使用二极管来构成回路，由此衍生出如下两种降压电路</p><ul><li><p><strong>半波整流电路</strong></p></li><li><p>电路中串联，并联两个二极管，D1为正半周期给RL提供负载，D2为C1提供放电回路，此时负载的电流为全波整流的一半，负半周期的电能送回给电源</p></li></ul><p><img src="/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/20210119113015910.jpeg" alt="在这里插入图片描述"></p><ul><li><strong>全波整流电路</strong></li><li>为组件RL，正半周期都提供了良好的负载，此时负载的电流翻倍</li></ul><p><img src="/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDQwNzIzOA==,size_16,color_FFFFFF,t_70#pic_center.jpeg" alt="在这里插入图片描述"></p><ul><li>实际使用时，因为电路开启时，电容相当于短路，需要电容与一个电阻串联，防止后续器件烧伤，串联电阻的电阻值选取标准以后续器件的最小额定电流为准，当然实际情况电压会比额定电压大，所以电阻计算时应视情况而定</li></ul><span id="more"></span><h3 id="电容滤波"><a href="#电容滤波" class="headerlink" title="电容滤波"></a>电容滤波</h3><p>由于大电容的制作工艺是多个导线缠绕制成，所以大电容工作时会表现出电感特性，即在高频信号下表现不好，而小电容因其体积小，所以其电感特性不明显，在高频信号下表现良好，所以可以采用大电容并联小电容的接法去过滤电路中的高频噪音和低频噪音</p><h3 id="电容选型须知"><a href="#电容选型须知" class="headerlink" title="电容选型须知"></a>电容选型须知</h3><p>相关参数：额定电压，工作频率范围，等效串联电感，等效串联电阻</p><table><thead><tr><th></th><th>铝电解电容</th><th>钽电容</th><th>陶瓷电容</th></tr></thead><tbody><tr><td>电容量</td><td>0.1uF - 3F</td><td>0.1uF - 1000uF</td><td>0.5pF - 100uF</td></tr><tr><td>耐压</td><td>5V - 500V</td><td>2V - 50V</td><td>2V - 1000V</td></tr><tr><td>ESR（等效串联电阻）</td><td>几十毫欧至2.5欧姆（100KHZ&#x2F;25C°）</td><td>几十毫欧至几百毫姆（100KHZ&#x2F;25C°）</td><td>几毫欧至几百毫姆（100KHZ&#x2F;25C°）</td></tr><tr><td>ESL(等效串联电感)</td><td>不超过100nH</td><td>2nH左右</td><td>1 -2nH</td></tr><tr><td>工作频率范围</td><td>低频滤波，小于600KHZ</td><td>中低频滤波，几百KHZ至几MHZ</td><td>高频滤波，几MHZ至几GHZ</td></tr></tbody></table><h2 id="电感"><a href="#电感" class="headerlink" title="电感"></a>电感</h2><p><strong>电感的电流不能突变</strong></p><h3 id="电感与磁珠的区别"><a href="#电感与磁珠的区别" class="headerlink" title="电感与磁珠的区别"></a>电感与磁珠的区别</h3><ol><li>电感是储能元件，磁珠是能量转换器件</li><li>电感多用于滤波回路，磁珠多用于信号回路</li><li>电感多用于中低频网络，磁珠常用于高频电路中</li></ol><h2 id="二极管"><a href="#二极管" class="headerlink" title="二极管"></a>二极管</h2><p>P型材料：用+3价硼原子从+4价的硅原子抢夺一个电子，硼原子带负电，硅原子留下空穴带正电，空穴即为多子</p><p>N型材料：用+5价磷原子，给予+4价硅原子一个电子，磷原子带正电，硅原子多一个电子带负电，电子为多子</p><p>PN结原理：扩散运动（多子），漂移运动（少子）</p><ul><li>施加正偏电压时，扩散运动增强，空间电荷区变窄</li><li>施加反偏电压时，漂移运动增强，空间电荷区变宽</li></ul><p>伏安特性曲线：</p><p><img src="/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/image-20230225134328895.png" alt="image-20230225134328895"></p><p><strong>导通电压：由于本身的扩散运动会使PN结内部产生一个内电场，外部施加正向电压时其电场需要大于内电场，才能增强其扩散运动产生电流，硅二极管一般为0.7V</strong></p><p><strong>反向饱和电流：</strong></p><ul><li><strong>施加反向电压时的与横轴平行的电流，当施加反向电压时，几乎所有的少子都参与了漂移运动，所以外部来看反向饱和电流恒定</strong></li><li><strong>当大到一定程度时，破坏了PN结结构，价电子挣脱共价键的束缚形成电流，击穿电压</strong></li></ul><p><img src="/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/image-20230225134835165.png" alt="image-20230225134835165"></p><p>uT为温度的电压当量</p><p>在电路中，对二极管同时施加直流电源和交流电源，则可将二极管视作一个电阻</p><h3 id="二极管的反向恢复过程"><a href="#二极管的反向恢复过程" class="headerlink" title="二极管的反向恢复过程"></a>二极管的反向恢复过程</h3><p>理想情况下，当电路中给予二极管一个远大于导通电压的电压时，突然使其反向，电路中的电流应立即截止，但实际情况为，电路中电流会先反向，而后缓慢截止</p><p><img src="/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDQwNzIzOA==,size_16,color_FFFFFF,t_70#pic_center-1678972112443-9.png" alt="在这里插入图片描述"></p><p>称之为二极管的反向恢复过程</p><p>产生的原因：</p><ul><li>在正向导通时，P区的空穴与N区的电子并不会在空间电荷区中立即复合，而是在一定的路程内，边漂移边扩散，使P区积攒电子，N区积攒空穴</li></ul><p><img src="/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDQwNzIzOA==,size_16,color_FFFFFF,t_70#pic_center-1678972116083-12.png" alt="在这里插入图片描述"></p><ul><li>突然间施加反向电压时，P区的电子，与N区的空穴会被拽回到相应的区域，形成反向漂移电流，所以会导致UI图中的反向电流</li><li>漂移的过程，电子与空穴复合，电流会慢慢减小，直至变为正常的反向饱和电流</li></ul><p>因为二极管的反向恢复过程，所以二极管不能再快速连续的脉冲下当做开关，</p><h3 id="肖特基二极管"><a href="#肖特基二极管" class="headerlink" title="肖特基二极管"></a>肖特基二极管</h3><p>对应于传统二极管，肖特基二极管的优点是</p><ul><li>反向恢复时间非常短</li><li>导通电压低</li><li>漏电流比较大，反向击穿电压比较低</li></ul><p>对应于场效应管，肖特基二极管的区别是</p><ul><li>肖特基二极管低功耗，超高速，反向恢复时间短，一般用于整流电路，场效应管是三极管，输入阻抗高，功耗低，噪音小，漏电流小，开关特性好，一般用于放大电路</li></ul><h3 id="两个二极管串联的意义"><a href="#两个二极管串联的意义" class="headerlink" title="两个二极管串联的意义"></a>两个二极管串联的意义</h3><p>当要求二极管承受的电压值大于其反向击穿电压时，一个二极管无法满足要求，此时就可以用两个二极管串联，利用二极管反向的反向电阻分压，将反向电压平均分配，但由于每个二极管的反向电阻不一定相同，则应每个二极管再并联一个电阻，使其电阻近乎相同，从而做到均分反向电压</p><h3 id="续流二极管"><a href="#续流二极管" class="headerlink" title="续流二极管"></a>续流二极管</h3><p>消除回路中大量的反向电动势，保护元器件</p><p><img src="/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/image-20230218153844988.png" alt="image-20230218153844988"></p><p>在图3 中KR 在VT 导通时，上面电压为上正下负，电流方向由上向下。在VT 关断时会，KR中电流突然中断，会产生感应电势，其方向是力图保持电流不变，即总想保持KR 电流方向为由下至下。这个感应电势与电源电压迭加后加在ＶＴ两端，容易使ＶＴ出穿。为此加上ＶＤ，将ＫＲ产生的感应电势短路掉，电注是你所说的“顺时针方向在二极管和继电器所的小回路里面流动”，从而保护ＶＴ</p><h3 id="瞬态电压抑制器"><a href="#瞬态电压抑制器" class="headerlink" title="瞬态电压抑制器"></a>瞬态电压抑制器</h3><p>利用二极管的反向击穿原理，与器件并联接入，当电路中电压过大，大于TVS的反向击穿电压时，TVS会从高阻态变为低电阻状态，同时将器件两端电压钳制在较低水平，保护电路，当电压恢复正常后，TVS管又变为高阻态，电路正常工作、</p><h3 id="LED灯"><a href="#LED灯" class="headerlink" title="LED灯"></a>LED灯</h3><p>一般的频率为50-60HZ</p><h2 id="三极管"><a href="#三极管" class="headerlink" title="三极管"></a>三极管</h2><p>不同工作状态下所利用的场景不同</p><p><strong>一般来说，放大区用于放大电路中</strong></p><p><strong>而在数字电路中的三极管一般工作在饱和区和截止区，利用其开关特性</strong></p><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><p>对与NPN与PNP的三极管，按照成本来说，一般NPN使用较高</p><p>但考虑到实际电路，当作为开关使用时：</p><p>NPN三极管它基集所需要的驱动电压较大，并且相对应的输出电流比较小，所以控制一盏灯的开关时，PNP三极管作为开关，会使灯更亮</p><p>但是NPN结构下的低噪，高频特性比PNP结构好</p><h3 id="MOS管"><a href="#MOS管" class="headerlink" title="MOS管"></a>MOS管</h3><ul><li>结型：利用PN结特性，使用时要让栅源电压小于0，栅源电压越小，产生沟道越窄，同样会产生夹断现象，<strong>VGS不能大与0，会使GS的PN结导通</strong></li></ul><p><img src="/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/image-20230227182851518.png" alt="image-20230227182851518"></p><ul><li>绝缘栅型：栅极下加入一个SIO2绝缘层，利用电场力吸引电子产生沟道，使漏源导通</li></ul><h4 id="工作详解"><a href="#工作详解" class="headerlink" title="工作详解"></a>工作详解</h4><p>金属-氧化物-半导体场效应晶体管，简称场效晶体管。内部结构（以N-MOSFET为例）如下图所示。</p><p><img src="/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/20200729104143_3906.jpg" alt="MOS管,三极管,IGBT"></p><p>MOSFET内部结构及符号</p><p>在P型半导体衬底上制作两个N+区，一个称为源区，一个称为漏区。漏、源之间是横向距离沟道区。在沟道区的表面上，有一层由热氧化生成的氧化层作为介质，称为绝缘栅。在源区、漏区和绝缘栅上蒸发一层铝作为引出电极，就是源极(S)、漏极(D)和栅极(G)。</p><p>MOSFET管是压控器件，它的导通关断受到栅极电压的控制。我们从图上观察，发现N-MOSFET管的源极S和漏极D之间存在两个背靠背的pn结，当栅极-源极电压VGS不加电压时，不论漏极-源极电压VDS之间加多大或什么极性的电压，总有一个pn结处于反偏状态，漏、源极间没有导电沟道，器件无法导通。</p><p>但如果VGS正向足够大，此时栅极G和衬底p之间的绝缘层中会产生一个电场，方向从栅极指向衬底，电子在该电场的作用下聚集在栅氧下表面，形成一个N型薄层(一般为几个nm)，连通左右两个N+区，形成导通沟道，如图中黄色区域所示。当VDS＞0V时，N-MOSFET管导通，器件工作。</p><h4 id="主要特性"><a href="#主要特性" class="headerlink" title="主要特性"></a>主要特性</h4><p>因为MOS管栅极无电流，输入端无伏安特性曲线，所以没有输入特性，故用特殊的转移特性表示其特性曲线</p><p><img src="/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/image-20230227183136034.png" alt="image-20230227183136034"></p><h4 id="MOS管工作时发热的主要原理"><a href="#MOS管工作时发热的主要原理" class="headerlink" title="MOS管工作时发热的主要原理"></a>MOS管工作时发热的主要原理</h4><p>主要原因</p><ul><li>驱动频率过高</li><li>基级驱动电压不足</li><li>通过漏极和源极的电流较大</li></ul><p>因为驱动电压不足，所以会导致MOS管在导通时他的尖峰电压与尖峰电流过大，这时主要引起MOS管发热的原因，所以改进的方法</p><ul><li>降低电路的驱动频率</li><li>提高源级的驱动电压</li><li>选择内阻较低的MOS管</li></ul><p>使在开关过程中，MOS管两端压降变小，能量损耗变少</p><h4 id="PMOS与NMOS相比的优势"><a href="#PMOS与NMOS相比的优势" class="headerlink" title="PMOS与NMOS相比的优势"></a>PMOS与NMOS相比的优势</h4><p><strong>NMOS导通电阻低且价格便宜，并且流过电流较大</strong></p><p>并且PMOS管驱动需要使用额外的三极管去驱动</p><h3 id="三极管与MOS的对比"><a href="#三极管与MOS的对比" class="headerlink" title="三极管与MOS的对比"></a>三极管与MOS的对比</h3><p>1）．场效应管的源极S、栅极G、漏极D分别对应于三极管的发射极e、基极b、集电极c，它们的作用相似，图1-6-A所示是N沟道MOS管和NPN型晶体三极管引脚，图1-6-B所示是P沟道MOS管和PNP型晶体三极管引脚对应图。</p><p>2)．场效应管是电压控制电流器件，由VGS控制ID，普通的晶体三极管是电流控制电流器件，由IB控制IC。MOS管道放大系数是（跨导gm）当栅极电压改变一伏时能引起漏极电流变化多少安培。晶体三极管是电流放大系数（贝塔β）当基极电流改变一毫安时能引起集电极电流变化多少。</p><p>3)．场效应管栅极和其它电极是绝缘的，不产生电流；而三极管工作时基极电流IB决定集电极电流IC。因此场效应管的输入电阻比三极管的输入电阻高的多。</p><p>4)．场效应管只有多数载流子参与导电；三极管有多数载流子和少数载流子两种载流子参与导电，因少数载流子浓度受温度、辐射等因素影响较大，所以场效应管比三极管的温度稳定性好。</p><p>5)．场效应管在源极未与衬底连在一起时，源极和漏极可以互换使用，且特性变化不大，而三极管的集电极与发射极互换使用时，其特性差异很大，b 值将减小很多。</p><p>6)．场效应管的噪声系数很小，在低噪声放大电路的输入级及要求信噪比较高的电路中要选用场效应管。</p><p>7)．场效应管和普通晶体三极管均可组成各种放大电路和开关电路，但是场效应管制造工艺简单，并且又具有普通晶体三极管不能比拟的优秀特性，在各种电路及应用中正逐步的取代普通晶体三极管，目前的大规模和超大规模集成电路中，已经广泛的采用场效应管。</p><h3 id="IGBT"><a href="#IGBT" class="headerlink" title="IGBT"></a>IGBT</h3><p>由一个三极管与MOS管组合而成，使其有MOS管高输入阻抗的优点，同时还有三极管双载流的优点。实现驱动功率小，饱和压降低的好处</p><p><img src="/2023/03/02/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/image-20230317182538742.png" alt="image-20230317182538742"></p><h3 id="作为开关使用时，MOS相比于三极管的好处"><a href="#作为开关使用时，MOS相比于三极管的好处" class="headerlink" title="作为开关使用时，MOS相比于三极管的好处"></a>作为开关使用时，MOS相比于三极管的好处</h3><ul><li>开关特性好:由于MOS管只靠多子导电，所以不存在少子储电特性，因此关断很迅速</li><li>输入阻抗高：由于MOS管栅极与衬底中有绝缘层隔开，可以看作为电容，所有有很大的输入阻抗</li><li>无二次击穿：当三极管温度上升时，会导致集电流电流上升，而集电极电流上升则会导致温度上升，形成恶循环，而mos管则具有与三极管相反的电流，温度特性，当温度上升时，电流反而会变小，从而温度会下降</li><li>MOS管导通后呈现纯阻性：三极管在饱和状态下时，可看作两个正偏的二极管，有极低的压降，但是这个压降为非线性电阻，不能利用欧姆定律去计算，而MOS管导通时呈现纯阻性状态，可以利用欧姆定律计算，从而可以使其并联在电路中，所以一个MOS管功率不够时，则可以多个MOS管并联</li></ul><h2 id="晶振"><a href="#晶振" class="headerlink" title="晶振"></a>晶振</h2><p>通电时产生机械振荡，施加力时会产生电</p><p>起振条件：</p><ul><li>输入与输出相位差为360：可以使输出返回到输入端的波形正好重叠，实现输出的放大</li><li>AF&gt;&#x3D;1:说明输入信号在回路中逛了一圈后又回到输入端，信号幅度比原来更大</li></ul><p>起振测量方法：</p><ul><li>测量无源晶振频率输入脚与输出脚两端电压差，一般为芯片电压Vcc的2分之1</li><li>直接用示波器测量，占空比为百分之50，平均电压为1&#x2F;2 Vcc</li></ul><h3 id="石英晶体的品质因数Q"><a href="#石英晶体的品质因数Q" class="headerlink" title="石英晶体的品质因数Q"></a>石英晶体的品质因数Q</h3><p>石英晶体的电压谐振现象可以用等效电路来模拟，</p><p>具体可以表现为</p><ul><li>静态电容C0</li><li>动态电容C1</li><li>动态电感L1</li><li>动态电阻R1</li></ul><p>具体的品质因数计算公式为：</p><p>Q&#x3D;2ΠfL1&#x2F;R1</p><p>通过此式可以看出，晶振的品质因数与动态电阻R1成反比，即损失的能量越低，晶振的频率越稳定，对应的Q值也就越高</p><h3 id="为什么要外加电容"><a href="#为什么要外加电容" class="headerlink" title="为什么要外加电容"></a>为什么要外加电容</h3><p>使晶体两端电容近似相当于负载电容，满足谐振条件使其起振</p><p>晶体旁的两个电容要接地，为三点式分压电容，接地点就是分压点</p><h3 id="为什么外加电阻"><a href="#为什么外加电阻" class="headerlink" title="为什么外加电阻"></a>为什么外加电阻</h3><p>晶体的内部芯片电路，可以看作是以一个增益很大的放大器，接入电阻相当于引入反馈，使晶体更稳定的工作</p><h3 id="晶振为什么不能放置在PCB边缘"><a href="#晶振为什么不能放置在PCB边缘" class="headerlink" title="晶振为什么不能放置在PCB边缘"></a>晶振为什么不能放置在PCB边缘</h3><p>会产生EMC辐射干扰电路</p><h3 id="32-768KHZ晶振作用"><a href="#32-768KHZ晶振作用" class="headerlink" title="32.768KHZ晶振作用"></a>32.768KHZ晶振作用</h3><p>32768为2的15次方，作为单片机中的时钟信号，将其15等分即能获得频率为1HZ的信号</p><h3 id="晶振两端电容相关计算"><a href="#晶振两端电容相关计算" class="headerlink" title="晶振两端电容相关计算"></a>晶振两端电容相关计算</h3><p>晶振旁边的两个电容，与晶振总体看来可以看作，两个电容与晶振并联，两个电容之间互相串联</p><p>具体电容大小的计算公式为：</p><p><strong><code>CL = C1\*C2 / (C1+C2) + CS</code></strong></p><p>其中CS为电路板的寄生电容，一般为3-5pF，C1&#x3D;C2，</p><p>上述式即可化简为：**<code>CL = C1 / 2 + CS</code>**</p><p><strong>晶振的选择方面，我们应该依照以下相关参数</strong>：</p><p><strong>频率稳定性、输出、相位噪声和抖动、电源和负载的影响、封装形式以及工作环境</strong></p><h2 id="放大电路"><a href="#放大电路" class="headerlink" title="放大电路"></a>放大电路</h2><p>共射级放大电路：</p><p>为什么输出电阻很大时，输出相当于电流源，输出电阻很小时，输出相当于电压源</p><p>原因：<strong>根据戴维南等效定律，从负载RL向电路看，可以等效为一个电压源和一个电阻串联，所以可得到相应的Uo，Io，根据公式可算出，当R0很大时，负载电阻的变化对电流几乎没影响，但对电压影响很大，R0很小时，负载电阻变化对电压几乎没影响，但对电流影响很大</strong></p><p>放大电路中，射级偏置电压Re的作用：</p><p><strong>将输出与输入之间联系起来，Ic的升高引起Ie升高，从而导致Ue升高，再导致Ube分得的电压下降，导致Ib下降，反过来影响Ic，形成反馈</strong></p><p>Rb2的作用是温度B基级电压，让流过Ib2的电流远大于Ib，可以将Rb1，Rb2，在B点电压近似于两电阻分压</p><h3 id="复合管"><a href="#复合管" class="headerlink" title="复合管"></a>复合管</h3><p>由两个三极管构成，让他在高功率电路上近似看成一个三极管组成的电路构成，放大电路大约为两个三极管放大倍数相乘</p><h3 id="多级放大电路"><a href="#多级放大电路" class="headerlink" title="多级放大电路"></a>多级放大电路</h3><p>构成要求：在电压源有输入内阻的情况下，保证尽可能大的放大倍数情况下，当负载变化时，输出电压基本不变</p><p><strong>放大倍数为：输入电阻Ri与电压源内阻R0之比，输入电阻越大，放大倍数越大</strong></p><p>理想输入级：射级跟随器（共集电极电路），保证输入电阻很大</p><p>中间级：共射级放大电路</p><p>输出级：共基级放大电路（保证输出电阻小，且可以放大电压）</p><p>耦合方式：不同放大电路之间的连接方式</p><ul><li>直接耦合：低频特性好，易于集成，缺点：Q点调试困难</li><li>阻容耦合：无法集成</li><li>变压器耦合：</li></ul><h2 id="稳压器"><a href="#稳压器" class="headerlink" title="稳压器"></a>稳压器</h2><h3 id="串联型稳压器"><a href="#串联型稳压器" class="headerlink" title="串联型稳压器"></a>串联型稳压器</h3><h3 id="三端稳压器"><a href="#三端稳压器" class="headerlink" title="三端稳压器"></a>三端稳压器</h3><h2 id="运算放大器"><a href="#运算放大器" class="headerlink" title="运算放大器"></a>运算放大器</h2><h3 id="同相比例"><a href="#同相比例" class="headerlink" title="同相比例"></a>同相比例</h3><h3 id="返相比例"><a href="#返相比例" class="headerlink" title="返相比例"></a>返相比例</h3><h3 id="差动放大器"><a href="#差动放大器" class="headerlink" title="差动放大器"></a>差动放大器</h3>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/">模拟电子电路</category>
      
      
      
    </item>
    
    <item>
      <title>C语言程序设计</title>
      <link>http://example.com/2023/02/24/C%E8%AF%AD%E8%A8%80/</link>
      <guid>http://example.com/2023/02/24/C%E8%AF%AD%E8%A8%80/</guid>
      <pubDate>Fri, 24 Feb 2023 14:07:08 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;转义字符&quot;&gt;&lt;a href=&quot;#转义字符&quot; class=&quot;headerlink&quot; title=&quot;转义字符&quot;&gt;&lt;/a&gt;转义字符&lt;/h2&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello, World!\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello, World!\tHello,world\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello, World!\rHello,World\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello, World!\\Hello world\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello, World!\&#x27;Hello world\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Hello, World! <span class="comment">// \n表示第一行输出后换行</span></span><br><span class="line">Hello, World!   Hello,world <span class="comment">// \t表示第二行输出后进行制表，再输出下一个hello world</span></span><br><span class="line">Hello,Worldd!     <span class="comment">// \r表示输出后，将\r后的字符串去替代前方的字符串，没替换部分则按原字符串为准</span></span><br><span class="line">Hello, World!\Hello world <span class="comment">//利用转义字符输出特殊符号</span></span><br><span class="line">Hello, World!<span class="string">&#x27;Hello world //利用转义字符输出特殊符号</span></span><br></pre></td></tr></table></figure><p>不同转义字符所产生的效果不同，上述代码输出效果</p><h2 id="常量的定义"><a href="#常量的定义" class="headerlink" title="常量的定义"></a>常量的定义</h2><h3 id="define预处理器"><a href="#define预处理器" class="headerlink" title="#define预处理器"></a>#define预处理器</h3><p>定义一个常量，定义时仅需要定义变量名，变量值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> PI 3.14</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">double</span> area;</span><br><span class="line">    <span class="type">double</span> r = <span class="number">2</span>;</span><br><span class="line">    area = r * r * PI;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;面积为: %.2f&quot;</span>,area);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，define定义时，若在define定义时对变量设计相关计算，define只会进行单纯的值替换，并不会视为赋予小括号</p><p><img src="/2023/02/24/C%E8%AF%AD%E8%A8%80/image-20230324080938141.png" alt="image-20230324080938141"></p><p><strong>define在定义一个变量时，可以通过undef取消变量的某个定义，再重新定义该变量，改变其值</strong></p><p><strong>#ifdef，由#if演变而来，意思为，如果定义了ifdef后面的值，就输出下方的语句，直到#endif处（预处理命令#）</strong></p><p><img src="/2023/02/24/C%E8%AF%AD%E8%A8%80/image-20230324081620594.png" alt="image-20230324081620594"></p><h3 id="const关键字"><a href="#const关键字" class="headerlink" title="const关键字"></a>const关键字</h3><p>定义时<strong>需要定义变量的数值类型，变量名，变量值，并且要有等号连接</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">double</span> PII = <span class="number">3.14</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">double</span> area;</span><br><span class="line">    <span class="type">double</span> r = <span class="number">2</span>;</span><br><span class="line">    area = r * r * PI;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;面积为: %.2f&quot;</span>,area);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要注意const不能对同一个变量重复定义</p><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;i的值为%d,i的地址为%p&quot;</span>,i,&amp;i);</span><br><span class="line"><span class="type">int</span> *ptr = &amp;i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;i的地址为%p,i的值为%d&quot;</span>,ptr,*ptr);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>定义时代表ptr是一个int*类型指针，他指向一个int类型的变量</p><p>ptr本身输出时，输出的是其指向变量地址</p><p>*ptr表示地址所指向的变量的值</p><p><strong>ptr本身也有地址</strong></p><p><strong>&amp;为取地址运算</strong></p><p>*<strong>为取该变量值所指向的变量的值</strong></p><p>不同数据类型的地址不能相互赋值</p><p><strong>如FLOAT类型数据的地址不能赋予给int*指针</strong></p><h2 id="字符数组"><a href="#字符数组" class="headerlink" title="字符数组"></a>字符数组</h2><p>C语言中没有专用的字符串定义，而是用字符数组去定义一个字符串</p><p>，字符数组的终止以’\0’为终止</p><p><img src="/2023/02/24/C%E8%AF%AD%E8%A8%80/image-20230324084449095.png" alt="image-20230324084449095"></p><p>所以输出该字符数组时，输出的为tom，所以当字符数组长度等于内部字符串长度时，输出可能会出现异常，因为没有’\0’终止符号</p><p>三种定义方式</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> a[<span class="number">20</span>] = &#123;<span class="string">&quot;tom&quot;</span>&#125;;</span><br><span class="line"><span class="type">char</span> b[<span class="number">20</span>] = &#123;<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;m&#x27;</span>&#125;;</span><br><span class="line"><span class="type">char</span> c[<span class="number">20</span>] = <span class="string">&quot;tom&quot;</span>;</span><br></pre></td></tr></table></figure><p><strong>其中，a，b，c相当于常量，所以定义时没有赋值，不能后面通过</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c = <span class="string">&quot;tom&quot;</span>;</span><br></pre></td></tr></table></figure><p><strong>去给该字符数组赋值，因为空间在数组创建时已经确定，但是如果该数组为字符指针赋值，则可以通过这种方法去改变值</strong></p><p><img src="/2023/02/24/C%E8%AF%AD%E8%A8%80/image-20230324085757111.png" alt="image-20230324085757111"></p><p><strong>还可以用字符指针变量表示字符串</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span>* ptr = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,ptr);</span><br></pre></td></tr></table></figure><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>]=&#123;<span class="number">6</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">25</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span> ;</span><br><span class="line">    <span class="type">int</span> j;</span><br><span class="line">    <span class="type">int</span> tmp;</span><br><span class="line">    <span class="type">int</span> len = <span class="keyword">sizeof</span>(a)/<span class="keyword">sizeof</span> (<span class="type">int</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = len; i &gt; <span class="number">0</span> ; i--) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; i; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j]&gt;a[j+<span class="number">1</span>])&#123;</span><br><span class="line">                tmp = a[j];</span><br><span class="line">                a[j] = a[j+<span class="number">1</span>];</span><br><span class="line">                a[j+<span class="number">1</span>]= tmp;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(count==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> m = <span class="number">0</span>; m &lt; len; ++m) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,a[m]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/C/">C</category>
      
      
      
    </item>
    
    <item>
      <title>数电笔记</title>
      <link>http://example.com/2023/02/24/%E6%95%B0%E5%AD%97%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/</link>
      <guid>http://example.com/2023/02/24/%E6%95%B0%E5%AD%97%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/</guid>
      <pubDate>Fri, 24 Feb 2023 14:07:08 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;数电&quot;&gt;&lt;a href=&quot;#数电&quot; class=&quot;headerlink&quot; title=&quot;数电&quot;&gt;&lt;/a&gt;数电&lt;/h1&gt;&lt;h2 id=&quot;码制&quot;&gt;&lt;a href=&quot;#码制&quot; class=&quot;headerlink&quot; title=&quot;码制&quot;&gt;&lt;/a&gt;码制&lt;/h2&gt;&lt;p&gt;二进制：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为了解决二进制表示0时会有两组二进制数的问题引入补码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/02/24/%E6%95%B0%E5%AD%97%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20230226225432200.png&quot; alt=&quot;image-20230226225432200&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;正数的补码与原码相同&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;负数的补码等于数值位每一位取反加一&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/2023/02/24/%E6%95%B0%E5%AD%97%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20230226230332992.png&quot; alt=&quot;image-20230226230332992&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果要进行数值位扩展，用8位二进制码表示5，正数加0，负数加1&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="数电"><a href="#数电" class="headerlink" title="数电"></a>数电</h1><h2 id="码制"><a href="#码制" class="headerlink" title="码制"></a>码制</h2><p>二进制：</p><p><strong>为了解决二进制表示0时会有两组二进制数的问题引入补码</strong></p><p><img src="/2023/02/24/%E6%95%B0%E5%AD%97%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20230226225432200.png" alt="image-20230226225432200"></p><ul><li><strong>正数的补码与原码相同</strong></li><li><strong>负数的补码等于数值位每一位取反加一</strong></li></ul><p><img src="/2023/02/24/%E6%95%B0%E5%AD%97%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20230226230332992.png" alt="image-20230226230332992"></p><p>如果要进行数值位扩展，用8位二进制码表示5，正数加0，负数加1</p><span id="more"></span><h2 id="卡诺图"><a href="#卡诺图" class="headerlink" title="卡诺图"></a>卡诺图</h2><h2 id="CMOS与TTL门电路"><a href="#CMOS与TTL门电路" class="headerlink" title="CMOS与TTL门电路"></a>CMOS与TTL门电路</h2><h3 id="CMOS"><a href="#CMOS" class="headerlink" title="CMOS"></a>CMOS</h3><h3 id="TTL"><a href="#TTL" class="headerlink" title="TTL"></a>TTL</h3><h2 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h2><h3 id="JK触发器"><a href="#JK触发器" class="headerlink" title="JK触发器"></a>JK触发器</h3><h3 id="D触发器"><a href="#D触发器" class="headerlink" title="D触发器"></a>D触发器</h3><h3 id="RS触发器"><a href="#RS触发器" class="headerlink" title="RS触发器"></a>RS触发器</h3><h2 id="计数器集成芯片"><a href="#计数器集成芯片" class="headerlink" title="计数器集成芯片"></a>计数器集成芯片</h2><h3 id="74138译码器"><a href="#74138译码器" class="headerlink" title="74138译码器"></a>74138译码器</h3><h3 id="74151数据选择器"><a href="#74151数据选择器" class="headerlink" title="74151数据选择器"></a>74151数据选择器</h3><h3 id="74160与74161计数器"><a href="#74160与74161计数器" class="headerlink" title="74160与74161计数器"></a>74160与74161计数器</h3><h2 id="振荡器"><a href="#振荡器" class="headerlink" title="振荡器"></a>振荡器</h2><h3 id="施密特触发器"><a href="#施密特触发器" class="headerlink" title="施密特触发器"></a>施密特触发器</h3><h3 id="多谐触发器"><a href="#多谐触发器" class="headerlink" title="多谐触发器"></a>多谐触发器</h3><h3 id="单稳态触发器"><a href="#单稳态触发器" class="headerlink" title="单稳态触发器"></a>单稳态触发器</h3>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E6%95%B0%E5%AD%97%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/">数字电子电路</category>
      
      
      
    </item>
    
    <item>
      <title>单片机笔记</title>
      <link>http://example.com/2023/01/25/%E5%8D%95%E7%89%87%E6%9C%BA/</link>
      <guid>http://example.com/2023/01/25/%E5%8D%95%E7%89%87%E6%9C%BA/</guid>
      <pubDate>Wed, 25 Jan 2023 14:07:08 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;单片机&quot;&gt;&lt;a href=&quot;#单片机&quot; class=&quot;headerlink&quot; title=&quot;单片机&quot;&gt;&lt;/a&gt;单片机&lt;/h1&gt;&lt;p&gt;RAM：随机存储器，一般被称作运行内存，读取速度快，下电后数据不保留&lt;/p&gt;
&lt;p&gt;ROM：只读存储器，与RAM不同，不同于软盘与光盘，不易损坏，且存储容量较大，断电不丢失数据&lt;/p&gt;
&lt;h2 id=&quot;AT89S51&quot;&gt;&lt;a href=&quot;#AT89S51&quot; class=&quot;headerlink&quot; title=&quot;AT89S51&quot;&gt;&lt;/a&gt;AT89S51&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;8位微处理器：包括运算器与控制器，有位处理器&lt;/li&gt;
&lt;li&gt;数据存储器（128B RAM）：最多可扩至64KB，片内RAM为高速RAM&lt;/li&gt;
&lt;li&gt;程序存储器（4KB FLASH ROM）:最多可扩展至64KB&lt;/li&gt;
&lt;li&gt;4个8位IO口&lt;/li&gt;
&lt;li&gt;全双工异步串口：4种工作方式&lt;/li&gt;
&lt;li&gt;2个16位定时器&amp;#x2F;计数器：有4种工作方式&lt;/li&gt;
&lt;li&gt;1个看门狗定时器：计数器，检测系统是否跑飞或者死循环，对系统发出复位信号，使系统复位&lt;/li&gt;
&lt;li&gt;中断系统：5个中断源，5个中断向量（中断服务程序的入口）,2级中断优先级&lt;/li&gt;
&lt;li&gt;特殊功能寄存器SFR 26个：控制寄存器和状态寄存器，映射在片内RAM区80H~FFH之内&lt;/li&gt;
&lt;li&gt;低功耗的空闲模式和掉电模式&lt;/li&gt;
&lt;li&gt;3个程序加密位&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相比于89C51，89S51最显著的优点是有一个ISP（在线可编程功能）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/01/25/%E5%8D%95%E7%89%87%E6%9C%BA/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20230315103444131.png&quot; alt=&quot;image-20230315103444131&quot;&gt;&lt;/p&gt;
&lt;p&gt;40个引脚各个功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电源引脚：Vcc（5V电源），Vss（数字地）&lt;/li&gt;
&lt;li&gt;时钟引脚：XTAL1（输入源，使用片内震荡源时外接石英晶体，电容，使用外部震荡源时，该引脚悬空），XTAL2（片内震荡源反相放大器输出源）&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;控制引脚&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;RST&lt;/td&gt;
&lt;td&gt;复位信号输入，复位时必须加两个机器周期的高电平，正常时应该为TTL低电平&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;EA*&lt;/td&gt;
&lt;td&gt;EA&amp;#x3D;1时，决定程序访问的ROM，PC值小于0FFFH时访问片内的FLASH，大于0FFFH时访问片外FLASH；EA&amp;#x3D;0时，只访问片外FLASH，地址为0000H~FFFFH，一般默认接高电平&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ALE&lt;/td&gt;
&lt;td&gt;访问外部存储器提供的低八位地址锁存信号，将低8位地址锁存在片外地址锁存器中，运行时一直有时钟信号输出，位晶振频率的六分之一，可通过特殊功能寄存器禁止时钟信号输出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PROG*&lt;/td&gt;
&lt;td&gt;对片内FLASH编程脉冲输入&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PSEN*&lt;/td&gt;
&lt;td&gt;片外存储器读选通信号，低有效&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;IO口&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;P0&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;漏极开路（OD）的双向口&lt;/strong&gt;，可作为系统总线的低8位地址线与数据总线的分时复用口，也可作通用IO口，需要加上拉电阻，此时变为准双向口（没有高阻态），可负载8个低功耗型的TTL负载&lt;/td&gt;
&lt;td&gt;作为总线口输入输出时一定要先写1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P1&lt;/td&gt;
&lt;td&gt;准双向口，内部含有上拉电阻，可驱动4个低功耗型TTL负载，其中P1.5&amp;#x2F;P1.6&amp;#x2F;P1.7是用于对FLASH存储器进行编程和校验的SPI总线，分别是MOSI(串行数据输入)，MISO(串行数据输出)，SCK（移位脉冲引脚）&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P2&lt;/td&gt;
&lt;td&gt;准双向口，内部有上拉电阻，可以作为系统总线的高8位地址总线使用&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P3&lt;/td&gt;
&lt;td&gt;准双向口，内部有上拉电阻&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;准双向口使用时要先写1&lt;/strong&gt;&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="单片机"><a href="#单片机" class="headerlink" title="单片机"></a>单片机</h1><p>RAM：随机存储器，一般被称作运行内存，读取速度快，下电后数据不保留</p><p>ROM：只读存储器，与RAM不同，不同于软盘与光盘，不易损坏，且存储容量较大，断电不丢失数据</p><h2 id="AT89S51"><a href="#AT89S51" class="headerlink" title="AT89S51"></a>AT89S51</h2><ul><li>8位微处理器：包括运算器与控制器，有位处理器</li><li>数据存储器（128B RAM）：最多可扩至64KB，片内RAM为高速RAM</li><li>程序存储器（4KB FLASH ROM）:最多可扩展至64KB</li><li>4个8位IO口</li><li>全双工异步串口：4种工作方式</li><li>2个16位定时器&#x2F;计数器：有4种工作方式</li><li>1个看门狗定时器：计数器，检测系统是否跑飞或者死循环，对系统发出复位信号，使系统复位</li><li>中断系统：5个中断源，5个中断向量（中断服务程序的入口）,2级中断优先级</li><li>特殊功能寄存器SFR 26个：控制寄存器和状态寄存器，映射在片内RAM区80H~FFH之内</li><li>低功耗的空闲模式和掉电模式</li><li>3个程序加密位</li></ul><p>相比于89C51，89S51最显著的优点是有一个ISP（在线可编程功能）</p><p><img src="/2023/01/25/%E5%8D%95%E7%89%87%E6%9C%BA/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20230315103444131.png" alt="image-20230315103444131"></p><p>40个引脚各个功能：</p><ul><li>电源引脚：Vcc（5V电源），Vss（数字地）</li><li>时钟引脚：XTAL1（输入源，使用片内震荡源时外接石英晶体，电容，使用外部震荡源时，该引脚悬空），XTAL2（片内震荡源反相放大器输出源）</li></ul><table><thead><tr><th>控制引脚</th><th>功能</th></tr></thead><tbody><tr><td>RST</td><td>复位信号输入，复位时必须加两个机器周期的高电平，正常时应该为TTL低电平</td></tr><tr><td>EA*</td><td>EA&#x3D;1时，决定程序访问的ROM，PC值小于0FFFH时访问片内的FLASH，大于0FFFH时访问片外FLASH；EA&#x3D;0时，只访问片外FLASH，地址为0000H~FFFFH，一般默认接高电平</td></tr><tr><td>ALE</td><td>访问外部存储器提供的低八位地址锁存信号，将低8位地址锁存在片外地址锁存器中，运行时一直有时钟信号输出，位晶振频率的六分之一，可通过特殊功能寄存器禁止时钟信号输出</td></tr><tr><td>PROG*</td><td>对片内FLASH编程脉冲输入</td></tr><tr><td>PSEN*</td><td>片外存储器读选通信号，低有效</td></tr></tbody></table><table><thead><tr><th>IO口</th><th></th><th></th></tr></thead><tbody><tr><td>P0</td><td><strong>漏极开路（OD）的双向口</strong>，可作为系统总线的低8位地址线与数据总线的分时复用口，也可作通用IO口，需要加上拉电阻，此时变为准双向口（没有高阻态），可负载8个低功耗型的TTL负载</td><td>作为总线口输入输出时一定要先写1</td></tr><tr><td>P1</td><td>准双向口，内部含有上拉电阻，可驱动4个低功耗型TTL负载，其中P1.5&#x2F;P1.6&#x2F;P1.7是用于对FLASH存储器进行编程和校验的SPI总线，分别是MOSI(串行数据输入)，MISO(串行数据输出)，SCK（移位脉冲引脚）</td><td></td></tr><tr><td>P2</td><td>准双向口，内部有上拉电阻，可以作为系统总线的高8位地址总线使用</td><td></td></tr><tr><td>P3</td><td>准双向口，内部有上拉电阻</td><td></td></tr></tbody></table><p><strong>准双向口使用时要先写1</strong></p><span id="more"></span><p><strong>CPU</strong></p><ul><li>运算器：对操作数进行算术，逻辑和位操作运算</li></ul><p>组成：算术逻辑运算单元ALU，累加器A，位处理器，程序状态字寄存器PSW，以及两个暂存器</p><p><strong>ALU：可以对8位变量进行逻辑运算，算术运算</strong></p><p><strong>A：使用最频繁的寄存器，可作为ALU的输入数据源之一，也可当作运算结果的存放单元，大多数数据都通过A，数据中转站，为避免瓶颈阻塞，单片机提供了不经过累加器的指令</strong></p><p><strong>PSW：字节地址为DOH</strong></p><p><img src="/2023/01/25/%E5%8D%95%E7%89%87%E6%9C%BA/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20230315111238235.png" alt="image-20230315111238235"></p><ol><li><strong>Cy：进位标志位，当有进位产生时为1，在位处理器时为，是累加器</strong></li><li><strong>Ac：辅助进位标志位，使用BCD码时，当低4位向高4位有进位时为1</strong></li><li><strong>F0：由用户使用的状态标志位，用指令使他置1或清0，控制程序流向</strong></li><li><strong>RS1，RS0：寄存器区选择位，分别用来选择4组不同的寄存器地址，（00H~1FH）</strong></li><li><strong>OV：溢出标志位</strong></li><li><strong>P：奇偶校验位，1表示累加器A中“1”的个数为奇数</strong></li></ol><ul><li>控制器</li></ul><ol><li>PC：程序计数器，是一个独立的16位计数器，用户不可访问，复位时PC位0000H，从程序存储器0000H开始读指令，取一个后自动加1，位宽决定能够访问的程序范围</li></ol><p><strong>存储器：哈佛结构，有各自的访问指令，分为4类</strong></p><ul><li>程序存储器(分为片内和片外两部分)：Flash Rom 最多为4KB，片外可扩至64KB</li></ul><p><strong>片内4KB FLASH，地址为0000H<del>0FFFH，16位地址总线，片外扩至64KB时，地址为0000H</del>FFFFH，有5个固定单元为中断源入口地址，分别为00003H~0023H，每个依次相隔8位，分别为外部中断0，定时器0，外部中断1，定时器1，串行口</strong></p><p><img src="/2023/01/25/%E5%8D%95%E7%89%87%E6%9C%BA/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20230315112839522.png" alt="image-20230315112839522"></p><ul><li>数据存储器（分为片内片外两部分）：片内RAM最多为128B，片外可扩至64KB</li></ul><p><strong>程序存储器可扩展最大RAM由地址线决定，89S51地址线为16根，所以可扩展2的16次幂，即64KB，片内片外的低128B地址是相同的，但由于访问指令不同所以不冲突</strong></p><p><img src="/2023/01/25/%E5%8D%95%E7%89%87%E6%9C%BA/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20230315115705939.png" alt="image-20230315115705939"></p><ul><li>特殊功能寄存器SFR：各功能部件的控制寄存器和状态寄存器</li></ul><p><strong>映射在片内80H~FFH，仅有字节地址末尾为8和0的特殊功能寄存器可以进行位寻址</strong></p><p><img src="/2023/01/25/%E5%8D%95%E7%89%87%E6%9C%BA/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20230315115922552.png" alt="image-20230315115922552"></p><p><img src="/2023/01/25/%E5%8D%95%E7%89%87%E6%9C%BA/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20230315122332406.png" alt="image-20230315122332406"></p><p><strong>堆栈指针SP：主要保护断点（保护跳转前程序指针）和现场保护（保护寄存器中的值），复位后默认为07H，使用时需要重新设置堆栈指针地址，一般设在片内RAM最上层</strong></p><p><strong>寄存器B：主要用于乘除法的数据存储，A*B时，高8位放入B寄存器，低8位放入A寄存器，除法时，商放入A寄存器，余数放入B寄存器</strong></p><p><strong>辅助寄存器AUXR：DISALE(ALE的禁止允许位，为0时允许)，DISRT0（控制看门狗是否在溢出情况下对系统进行复位，为0时允许复位），WDIDLE（单片机在空闲模式下看门狗是否计数，为0时允许计数）</strong></p><p><strong>数据指针DPTR0与DPTR1：DPTR0为89C51原有的数据指针，DPTR1为新增加的数据指针，AUXR1寄存器用于选择使用哪个数据指针，为0时使用DPTR0，数据指针也可以作为一个独立的16位寄存器使用，或两个8位的寄存器使用</strong></p><p><strong>辅助寄存器AUXR1：DPS用于选择使用哪个数据指针，地址为A2H</strong></p><p><strong>看门狗计数器WDT：14位计数器和看门狗定时器复位寄存器</strong></p><ul><li>位地址空间：211个可寻址位，128片内RAM，83位SFR区</li></ul><p>128位在RAM中20H~2FH单元中，每个单元为8位，一共128位，每一位可以置1清0，也可以进行8位的读或写</p><p>剩余的位在特殊功能寄存器中，一共有11个寄存器可供位寻址，一共88位，由5位未用</p><p><img src="/2023/01/25/%E5%8D%95%E7%89%87%E6%9C%BA/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20230315104510770.png" alt="image-20230315104510770"></p><p><strong>串行IO口属于带锁存功能的特殊寄存器，字节地址分别为80H,90H,A0H,B0H</strong></p><h3 id="时钟电路与时序"><a href="#时钟电路与时序" class="headerlink" title="时钟电路与时序"></a>时钟电路与时序</h3><p>时钟电路产生必须的控制信号，严格按时执行指令，执行程序时，CPU首先取指令，然后译码，由时序电路产生的一系列控制信号完成规定的操作</p><p>时序信号分为两类</p><ul><li>对片内各个功能部件进行控制，用户无需了解</li><li><strong>对片外存储器或I&#x2F;O的控制</strong></li></ul><p><strong>时钟频率直接影响单片机运行速度</strong></p><p>分为两种</p><ul><li>内部时钟方式：内部集成了一个高增益的反相放大器，外部只需要接一个晶振（11.0592）两个电容即可</li><li>外部时钟方式：利用现成的外部振荡器产生脉冲信号，一般用于控制多个单片机，使用外部振荡器时XLAT2要悬空</li></ul><p>时钟周期：时钟信号的基本时间单位</p><p>机器周期：单片机完成一个基本操作所需要的时间，一个机器周期可能包含若干个时钟周期，S51位12个时钟周期为一个机器周期，<strong>一个机器周期有6个状态，1个状态有2拍，一拍代表一个时钟周期</strong></p><p>指令周期：执行一条指令所需要的时间，一般一个指令周期为一个机器周期</p><p><strong>复位时只需要在RST引脚给一个两个机器周期的高电平即可复位</strong></p><p><strong>单片机最小系统：单片机，时钟电路，复位电路</strong></p><h3 id="对于P0口工作原理详解"><a href="#对于P0口工作原理详解" class="headerlink" title="对于P0口工作原理详解"></a>对于P0口工作原理详解</h3><p><img src="/2023/01/25/%E5%8D%95%E7%89%87%E6%9C%BA/image-20230324020202219.png" alt="image-20230324020202219"></p><p>由锁存器，输入缓冲器，切换开关，非门，与非门</p><ul><li>其工作在IO线时，主要是由控制信号决定，当控制信号为0时，上端与门始终为0，导致上方晶体管V1断开，此时的多路开关接到锁存器Q非引脚</li></ul><p><strong>上拉电阻的原因：</strong></p><p><strong>当锁存器D口写入0时，Q非端输出为1，此时V2管导通，P0口呈高阻态，此时需要加上拉电阻将P0口拉至高电平</strong></p><ul><li>其工作在地址线时，控制信号输入1，多路开关打到地址&#x2F;数据信号线初，通过V1,V2的开关状态，实现输出的0或1</li></ul><h3 id="低功耗模式"><a href="#低功耗模式" class="headerlink" title="低功耗模式"></a>低功耗模式</h3><p><strong>空闲模式IDLE：切断驱动CPU的时钟，退出方式：响应中断，硬件复位</strong></p><p><strong>掉电保持模式PD：切断所有时钟，维持单片机中RAM，特殊功能寄存器中的内容，该模式可以由内部电源供电</strong></p><p>PCON特殊功能寄存器（87H）：</p><ul><li>SMOD：串行通信波特率的选择</li><li>GF1：通用标志位</li><li>GF0：通用标志位</li><li>PD：掉电保持模式控制位，为1时进入掉电保持模式</li><li>IDL：空闲状态控制位，为1时进入空闲状态</li></ul><h3 id="指令系统"><a href="#指令系统" class="headerlink" title="指令系统"></a>指令系统</h3><p>寻址方式：指令中说明操作数所在位置的方法</p><ul><li><p>寄存器寻址：如MOV A，Rx 将Rx中的数送入A累加器中，Rx为当前使用的寄存器组中的R0<del>R7，即RAM中的00H</del>1FH</p></li><li><p>直接寻址：如MOV  A，40H表示把RAM中40H所指向的数据送入累加器A中，也可以MOV   30H , 40H意思为把40H所指向的数据送入30H中，<strong>是访问片内所有特殊功能寄存器的唯一方式</strong></p></li><li><p><strong>寄存器间接寻址：如MOV A , @Ri (I&#x3D;0或1)     表示Ri中存放的是操作数的地址，通过该地址找到该数据存到累加器A中</strong></p></li><li><p>立即数寻址方式：如 MOVC A ,#40H ，表示直接将40H送给累加器A</p></li><li><p><strong>基址加变址寻址方式：基址寄存器只能是PC或DPTR，变址为累加器A，如MOV A , @A+DPTR，两者相加作为16位地址进行寻址</strong></p></li><li></li></ul>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E5%8D%95%E7%89%87%E6%9C%BA%E5%8E%9F%E7%90%86%E5%8F%8A%E5%BA%94%E7%94%A8/">单片机原理及应用</category>
      
      
      
    </item>
    
    <item>
      <title>PCB常用规则</title>
      <link>http://example.com/2023/01/14/PCB%20Layout/</link>
      <guid>http://example.com/2023/01/14/PCB%20Layout/</guid>
      <pubDate>Sat, 14 Jan 2023 14:07:08 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;PCB&quot;&gt;&lt;a href=&quot;#PCB&quot; class=&quot;headerlink&quot; title=&quot;PCB&quot;&gt;&lt;/a&gt;PCB&lt;/h1&gt;&lt;p&gt;总体流程&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;原理图封装库创建&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;原理图设计&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PCB封装&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PCB布线设计&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;布线优化&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;网络DRC检查，结构检查&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;制版&lt;/p&gt;
&lt;p&gt;阻焊的作用：防止绿油覆盖&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;PCB设计前，要先进行板框评估，将所有器件选中，按照矩形区排列，确定大概范围后在机械1层布板&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果被绿油覆盖，则无法焊接，因为绿油绝燃，阻焊不能与焊盘完全重叠，因为可能会有绿油飞溅，会导致焊接不牢固&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;PCB模块化设计&quot;&gt;&lt;a href=&quot;#PCB模块化设计&quot; class=&quot;headerlink&quot; title=&quot;PCB模块化设计&quot;&gt;&lt;/a&gt;PCB模块化设计&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2023/01/14/PCB%20Layout/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20230226171410492.png&quot; alt=&quot;image-20230226171410492&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU等放到中间&lt;/li&gt;
&lt;li&gt;电源置于左侧&lt;/li&gt;
&lt;li&gt;上下为接口&lt;/li&gt;
&lt;li&gt;右侧为继电器和蜂鸣器&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;布局原则&quot;&gt;&lt;a href=&quot;#布局原则&quot; class=&quot;headerlink&quot; title=&quot;布局原则&quot;&gt;&lt;/a&gt;布局原则&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;先大后小，先难后易，重要的&lt;strong&gt;单元电路&lt;/strong&gt;，&lt;strong&gt;核心元器件&lt;/strong&gt;应该优先进行布局。如MCU&lt;/li&gt;
&lt;li&gt;去耦电容应该尽量靠近IC芯片的电源管脚附近，并使电源与地之间的回路尽可能减小，防止干扰&lt;/li&gt;
&lt;li&gt;相同的结构电路部分尽量使用对称布局&lt;/li&gt;
&lt;li&gt;同一类型的插装元件在X或Y方向上应该尽量朝同一个方向布置，同一种类型的有极性元器件也要力争在X或Y方向上保持一致（尽量让正极都朝上或朝下）&lt;/li&gt;
&lt;li&gt;发热元件应均匀分布，保证散热，但除温度检测元件以外的温度敏感元件应远离发热元件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高电压大电流信号&lt;/strong&gt;与&lt;strong&gt;低电压小电流信号&lt;/strong&gt;应完全分开，&lt;strong&gt;模拟信号&lt;/strong&gt;与&lt;strong&gt;数字信号&lt;/strong&gt;分开，&lt;strong&gt;高频信号&lt;/strong&gt;与&lt;strong&gt;低频信号&lt;/strong&gt;分开，&lt;strong&gt;高频元器件之间的间隔要充分&lt;/strong&gt;，使用同一电源的器件尽量安排在同一区域，以便于将来的电源分隔&lt;/li&gt;
&lt;/ul&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="PCB"><a href="#PCB" class="headerlink" title="PCB"></a>PCB</h1><p>总体流程</p><ol><li><p>原理图封装库创建</p></li><li><p>原理图设计</p></li><li><p>PCB封装</p></li><li><p>PCB布线设计</p></li><li><p>布线优化</p></li><li><p>网络DRC检查，结构检查</p></li><li><p>制版</p><p>阻焊的作用：防止绿油覆盖</p></li></ol><p>PCB设计前，要先进行板框评估，将所有器件选中，按照矩形区排列，确定大概范围后在机械1层布板</p><p><strong>如果被绿油覆盖，则无法焊接，因为绿油绝燃，阻焊不能与焊盘完全重叠，因为可能会有绿油飞溅，会导致焊接不牢固</strong></p><h2 id="PCB模块化设计"><a href="#PCB模块化设计" class="headerlink" title="PCB模块化设计"></a>PCB模块化设计</h2><p><img src="/2023/01/14/PCB%20Layout/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20230226171410492.png" alt="image-20230226171410492"></p><ul><li>CPU等放到中间</li><li>电源置于左侧</li><li>上下为接口</li><li>右侧为继电器和蜂鸣器</li></ul><h2 id="布局原则"><a href="#布局原则" class="headerlink" title="布局原则"></a>布局原则</h2><ul><li>先大后小，先难后易，重要的<strong>单元电路</strong>，<strong>核心元器件</strong>应该优先进行布局。如MCU</li><li>去耦电容应该尽量靠近IC芯片的电源管脚附近，并使电源与地之间的回路尽可能减小，防止干扰</li><li>相同的结构电路部分尽量使用对称布局</li><li>同一类型的插装元件在X或Y方向上应该尽量朝同一个方向布置，同一种类型的有极性元器件也要力争在X或Y方向上保持一致（尽量让正极都朝上或朝下）</li><li>发热元件应均匀分布，保证散热，但除温度检测元件以外的温度敏感元件应远离发热元件</li><li><strong>高电压大电流信号</strong>与<strong>低电压小电流信号</strong>应完全分开，<strong>模拟信号</strong>与<strong>数字信号</strong>分开，<strong>高频信号</strong>与<strong>低频信号</strong>分开，<strong>高频元器件之间的间隔要充分</strong>，使用同一电源的器件尽量安排在同一区域，以便于将来的电源分隔</li></ul><span id="more"></span><h3 id="布线规则"><a href="#布线规则" class="headerlink" title="布线规则"></a>布线规则</h3><p>线宽规则：地线＞电源线线＞信号线</p><p>一般来说地线与电源线都分层铺铜处理</p><p>放置时，应遵循沿信号流向布线的原则，避免环绕</p><ul><li>3W原则：尽量保证平行线之间的间距大于三倍线宽</li><li>20H规则：电源层与底层之间电场是会变化的，会向外发出辐射，简称边缘效应，将电源层内缩，使电场只在接地层范围内传导，距离尽量大于20H（电源层与接地层之间的介质厚度）</li><li>5-5规则：当频率大于5Mhz或脉冲上升时间小于5ns时，要使用多层板</li><li>信号线与其回路形成的面积要尽可能小</li><li>消除串扰：保证3W原则，或在平行线中插入接地的隔离线，减小布线层与地平面的距离</li><li>对于高频信号，要将其用地线包裹</li><li>相邻层走线方向要正交控制，即相邻层走线互相垂直</li><li>不允许出现浮空多余的走线</li><li>同一网络的走线宽度应该保持一致，避免出现阻抗不匹配现象，产生反射</li><li>防止信号线出线闭环</li><li>走线尽可能的短</li><li>走线避免出现锐角或直角</li><li>要添加必要的去耦电容，电源与器件连接时中间要加入滤波，旁路，去耦电容尽可能靠近电源</li></ul><h2 id="蓝牙模块"><a href="#蓝牙模块" class="headerlink" title="蓝牙模块"></a>蓝牙模块</h2><ul><li>布局时，天线部分附近应该没有铜箔，即附近挖空</li><li>晶振部分，晶振是一个强干扰源，要远离天线部分，天线负责信号收发，如果有干扰的话会影响信号</li><li>天线匹配部分一般都是走一字型或L型</li><li>电源引脚做好退耦</li></ul>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/PCB-Layout/">PCB Layout</category>
      
      
      
    </item>
    
    <item>
      <title>Servlet入门</title>
      <link>http://example.com/2022/10/23/Servelet/</link>
      <guid>http://example.com/2022/10/23/Servelet/</guid>
      <pubDate>Sun, 23 Oct 2022 14:07:08 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;Servlet&quot;&gt;&lt;a href=&quot;#Servlet&quot; class=&quot;headerlink&quot; title=&quot;Servlet&quot;&gt;&lt;/a&gt;Servlet&lt;/h1&gt;&lt;h2 id=&quot;快速入门&quot;&gt;&lt;a href=&quot;#快速入门&quot; class=&quot;headerlink&quot; title=&quot;快速入门&quot;&gt;&lt;/a&gt;快速入门&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;导入Javax.servelet依赖坐标&lt;/li&gt;
&lt;li&gt;创建一个类，实现servelet接口，并重写接口中的所有方法&lt;/li&gt;
&lt;li&gt;将类中加入webservlet注释，给定url路径&lt;/li&gt;
&lt;li&gt;启动tomcat&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/2022/10/23/Servelet/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20221108090251260.png&quot; alt=&quot;image-20221108090251260&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;生命周期&quot;&gt;&lt;a href=&quot;#生命周期&quot; class=&quot;headerlink&quot; title=&quot;生命周期&quot;&gt;&lt;/a&gt;生命周期&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;当第一次被访问时，由web服务器创建servlat对象，当loadonstartup&amp;gt;&amp;#x3D;0时，则在服务器启动时就会创建Servlet对象&lt;/li&gt;
&lt;li&gt;被创建后，用init（）方法初始化servlat对象，如完成一些加载配置，创建链接等初始化工作。该方法只能调用一次&lt;/li&gt;
&lt;li&gt;每次请求servlet时，web服务器都会调用service方法对请求进行处理&lt;/li&gt;
&lt;li&gt;当需要释放内存或关闭服务器时，servlet对象会被销毁，web服务器会调用destory方法完成资源的回收，该方法也只能调用一次&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扩大局部变量作用域方法：创建一个成员变量，用this.name &amp;#x3D; name;将局部变量的值赋给成员变量，再由其他方法调用&lt;/p&gt;
&lt;h2 id=&quot;UrlPattern&quot;&gt;&lt;a href=&quot;#UrlPattern&quot; class=&quot;headerlink&quot; title=&quot;UrlPattern&quot;&gt;&lt;/a&gt;UrlPattern&lt;/h2&gt;&lt;p&gt;多个访问路径的配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;精确匹配    urlPatterns &amp;#x3D; {“&amp;#x2F;demo1”,”&amp;#x2F;demo2”}&lt;/li&gt;
&lt;li&gt;目录匹配    urlPatterns &amp;#x3D; {“&amp;#x2F;user&amp;#x2F;*”}  代表user目录下的任意路径&lt;/li&gt;
&lt;li&gt;扩展名匹配  urlPatterns &amp;#x3D; {“&amp;#x2F;*.do”}     代表扩展名为do的任意路径&lt;/li&gt;
&lt;li&gt;任意匹配    urlPatterns &amp;#x3D; {“&amp;#x2F;*”} 代表任意路径&lt;/li&gt;
&lt;li&gt;当一个路径同时满足多个匹配时，精确匹配优先级最高&lt;/li&gt;
&lt;/ul&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h1><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><ul><li>导入Javax.servelet依赖坐标</li><li>创建一个类，实现servelet接口，并重写接口中的所有方法</li><li>将类中加入webservlet注释，给定url路径</li><li>启动tomcat</li></ul><p><img src="/2022/10/23/Servelet/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20221108090251260.png" alt="image-20221108090251260"></p><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><ul><li>当第一次被访问时，由web服务器创建servlat对象，当loadonstartup&gt;&#x3D;0时，则在服务器启动时就会创建Servlet对象</li><li>被创建后，用init（）方法初始化servlat对象，如完成一些加载配置，创建链接等初始化工作。该方法只能调用一次</li><li>每次请求servlet时，web服务器都会调用service方法对请求进行处理</li><li>当需要释放内存或关闭服务器时，servlet对象会被销毁，web服务器会调用destory方法完成资源的回收，该方法也只能调用一次</li></ul><p>扩大局部变量作用域方法：创建一个成员变量，用this.name &#x3D; name;将局部变量的值赋给成员变量，再由其他方法调用</p><h2 id="UrlPattern"><a href="#UrlPattern" class="headerlink" title="UrlPattern"></a>UrlPattern</h2><p>多个访问路径的配置</p><ul><li>精确匹配    urlPatterns &#x3D; {“&#x2F;demo1”,”&#x2F;demo2”}</li><li>目录匹配    urlPatterns &#x3D; {“&#x2F;user&#x2F;*”}  代表user目录下的任意路径</li><li>扩展名匹配  urlPatterns &#x3D; {“&#x2F;*.do”}     代表扩展名为do的任意路径</li><li>任意匹配    urlPatterns &#x3D; {“&#x2F;*”} 代表任意路径</li><li>当一个路径同时满足多个匹配时，精确匹配优先级最高</li></ul><span id="more"></span><h2 id="XML配置"><a href="#XML配置" class="headerlink" title="XML配置"></a>XML配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Demo2<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span> //servlet文件名</span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.jdc.test.ServletDemo2<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span> /servlet全类名路径</span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Demo2<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span> //与上方设置的文件名相同</span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/login<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span> //设置url路径</span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Request和Response"><a href="#Request和Response" class="headerlink" title="Request和Response"></a>Request和Response</h2><ul><li><strong>request对象负责接收客户端发出的请求数据</strong></li><li><strong>response对象负责发送服务端产生的数据</strong></li></ul><h3 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h3><p>获取三种不同位置的数据</p><ul><li>请求行</li></ul><ol><li>getMethod（）：获取请求方式</li><li>getContextPath（）：获取虚拟目录</li><li>getRequestURL（）：获取url</li><li>getRequestURI（）：获取URI</li><li>getQueryString（）：获取请求参数</li></ol><ul><li>请求头</li></ul><ol><li>getHeader():获取请求头的数据</li></ol><ul><li>请求体</li></ul><ol><li>BufferedReader    getReader():获取字符输入流数据</li><li>ServletInputString  getInputStream():获取字节输入流数据</li></ol><hr><p><strong>针对get，post方法获取参数的通用方法</strong></p><ul><li>getParameterMap():获取所有参数的map集合</li><li>getParameterValues():获取特定参数的值的数据集合</li><li>getParameterNames():获取map集合中的所有键，返回的是枚举</li><li>getParameter():根据键获取单个参数值</li></ul><p><img src="/2022/10/23/Servelet/Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20221108111849643.png" alt="image-20221108111849643"></p><h4 id="请求中文乱码解决"><a href="#请求中文乱码解决" class="headerlink" title="请求中文乱码解决"></a>请求中文乱码解决</h4><p>设置响应头的contenttype，将charset设置为UTF-8</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resp.setHeader(<span class="string">&quot;content-type&quot;</span>,<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="请求转发（forward）"><a href="#请求转发（forward）" class="headerlink" title="请求转发（forward）"></a>请求转发（forward）</h4><p>一种在服务器内部资源跳转的形式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.getRequestDispatcher(<span class="string">&quot;要跳转的url路径&quot;</span>).forward(req,resp);</span><br></pre></td></tr></table></figure><p>跳转资源共享的三种语句</p><table><thead><tr><th>返回值类型</th><th>语句</th><th>作用</th></tr></thead><tbody><tr><td>void</td><td>setAttribute(String string,Object o)</td><td>为request域中添加变量</td></tr><tr><td>Object</td><td>getAttribute(String string)</td><td>根据string值获取request域中的变量</td></tr><tr><td>void</td><td>removeAttribute(String string)</td><td>根据string值移除request域中的键值对</td></tr></tbody></table><p>转发特点</p><ul><li>客户端路径不发生变化</li><li>只能在服务器内部转发资源</li><li>转发是一次请求，可以在转发过程中用request共享数据</li></ul><h3 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h3><p>响应行</p><ul><li>void    setStatus（int sc）：设置响应状态码</li></ul><p>响应头</p><ul><li>void   setHeader(键，值)：设置响应头</li></ul><p>响应体</p><ul><li>PrintWriter   getWriter()：获取字符输出流</li><li>ServletOutPutStream     getOutPutStream（）：获取字节输出流</li></ul><h4 id="重定向（redirect）"><a href="#重定向（redirect）" class="headerlink" title="重定向（redirect）"></a>重定向（redirect）</h4><p>一种资源跳转的方式：将处理不了的资源转给别的服务器处理，将状态码（302）以及对应服务器位置（响应头）返还给客户端，告诉客户端去找别的服务器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resp.sendRedirect(<span class="string">&quot;B服务器路径&quot;</span>) <span class="comment">//B服务器路径要加虚拟路径名称</span></span><br></pre></td></tr></table></figure><p>三个特点：与请求的forward特点相反</p><ul><li>浏览器地址栏发生变化</li><li>可以重定向到任意资源</li><li>发送了两次请求，不能共享数据</li></ul><h2 id="路径问题"><a href="#路径问题" class="headerlink" title="路径问题"></a>路径问题</h2><p>判定条件：明确路径的使用对象</p><ul><li>浏览器使用：需要虚拟路径</li><li>服务器使用：不需要虚拟路径</li></ul><h2 id="字节输出流与输入流对拷"><a href="#字节输出流与输入流对拷" class="headerlink" title="字节输出流与输入流对拷"></a>字节输出流与输入流对拷</h2><p>导入commons-io依赖坐标</p><p>其中IOUtills中的copy方法即可完成</p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/JavaWeb/">JavaWeb</category>
      
      
      
    </item>
    
    <item>
      <title>HTML入门</title>
      <link>http://example.com/2022/10/06/Html/</link>
      <guid>http://example.com/2022/10/06/Html/</guid>
      <pubDate>Thu, 06 Oct 2022 14:07:08 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;HTML-结构层&quot;&gt;&lt;a href=&quot;#HTML-结构层&quot; class=&quot;headerlink&quot; title=&quot;HTML 结构层&quot;&gt;&lt;/a&gt;HTML 结构层&lt;/h1&gt;&lt;h2 id=&quot;基础标签&quot;&gt;&lt;a href=&quot;#基础标签&quot; class=&quot;headerlink&quot; title=&quot;基础标签&quot;&gt;&lt;/a&gt;基础标签&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;   //定义字符集&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;快速入门&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;   //设置页面标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;font&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;color&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;aqua&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;只因你太美&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;font&lt;/span&gt;&amp;gt;&lt;/span&gt;  //设置文字颜色，页面内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;   //一号标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      蔡徐坤的大只因 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;H2&lt;/span&gt;&amp;gt;&lt;/span&gt;   //二号标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      蔡徐坤第二大的只因&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;H2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      蔡徐坤的第三大只因&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      蔡徐坤的第四大只因&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;hr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;font&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;color&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;#00008b&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;face&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;楷体&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;size&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;只因你太美&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;font&lt;/span&gt;&amp;gt;&lt;/span&gt;  //字体颜色 字体格式 字体大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;河大今日报&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;   //字体居中 加粗&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;“希望可以站在我们探索的起点上，不断奔向星辰大海。”&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;  //&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;P&lt;/span&gt;&amp;gt;&lt;/span&gt;段落 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;I&lt;/span&gt;&amp;gt;&lt;/span&gt;斜体&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;u&lt;/span&gt;&amp;gt;&lt;/span&gt;近日，我国第四批预备航天员选拔工作正式启动。中国航天员，正期待着与你一起探索浩瀚宇宙、遇见别样风景、感受中国式浪漫。你有梦、就来闯，中国空间站等你来出差！&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;u&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;  //斜体，分段&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="HTML-结构层"><a href="#HTML-结构层" class="headerlink" title="HTML 结构层"></a>HTML 结构层</h1><h2 id="基础标签"><a href="#基础标签" class="headerlink" title="基础标签"></a>基础标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span>   //定义字符集</span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>快速入门<span class="tag">&lt;/<span class="name">title</span>&gt;</span>   //设置页面标题</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;aqua&quot;</span>&gt;</span>只因你太美<span class="tag">&lt;/<span class="name">font</span>&gt;</span>  //设置文字颜色，页面内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>   //一号标题</span><br><span class="line">      蔡徐坤的大只因 </span><br><span class="line">  <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">H2</span>&gt;</span>   //二号标题</span><br><span class="line">      蔡徐坤第二大的只因</span><br><span class="line">  <span class="tag">&lt;/<span class="name">H2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line">      蔡徐坤的第三大只因</span><br><span class="line">  <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h4</span>&gt;</span></span><br><span class="line">      蔡徐坤的第四大只因</span><br><span class="line">  <span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#00008b&quot;</span> <span class="attr">face</span>=<span class="string">&quot;楷体&quot;</span> <span class="attr">size</span>=<span class="string">&quot;5&quot;</span>&gt;</span>只因你太美<span class="tag">&lt;/<span class="name">font</span>&gt;</span>  //字体颜色 字体格式 字体大小</span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>河大今日报<span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span>   //字体居中 加粗</span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span>“希望可以站在我们探索的起点上，不断奔向星辰大海。”<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>  //<span class="tag">&lt;<span class="name">P</span>&gt;</span>段落 <span class="tag">&lt;<span class="name">I</span>&gt;</span>斜体</span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span>近日，我国第四批预备航天员选拔工作正式启动。中国航天员，正期待着与你一起探索浩瀚宇宙、遇见别样风景、感受中国式浪漫。你有梦、就来闯，中国空间站等你来出差！<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>  //斜体，分段</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="图片，视频，音频标签"><a href="#图片，视频，音频标签" class="headerlink" title="图片，视频，音频标签"></a>图片，视频，音频标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;a.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;400&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>图片标签 ：</strong></p><p>**SRC： URL路径 **</p><p><strong>width：宽</strong></p><p><strong>height：高</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;b.mp3&quot;</span> <span class="attr">controls</span> = <span class="string">&quot;controls&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Controls：音频播放控制器</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;c.mp4&quot;</span> <span class="attr">controls</span> = <span class="string">&quot;controls&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Controls：视频播放控制器</strong></p><hr><p><strong>URL路径</strong></p><p><strong>相对路径：相对Html文件的位置关系</strong></p><p><strong>.&#x2F;表示当前目录下</strong></p><p><strong>..&#x2F;表示上一级目录</strong></p><p><strong>当两个文件如：html&#x2F;img&#x2F;111.img</strong></p><p><strong>第二个文件为 ：html&#x2F;audio&#x2F;222.mp4</strong></p><p><strong>因为img与audio平级</strong></p><p><strong>所以需要..&#x2F;返回上一级目录再找到audio，222.MP4</strong></p><p><strong>即..&#x2F;audio&#x2F;222.MP4</strong></p><p>绝对路径：完整路径</p><h2 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.bilibili.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>点我去B站<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     //跳转的URL路径                   // _Self即为在当前页面跳转超链接</span><br></pre></td></tr></table></figure><h2 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span> //ol为有序列表，ul为无序列表</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>鸡<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>太<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>美<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span>&gt;</span>  //设置分隔符，表格宽度</span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;centre&quot;</span>&gt;</span>   //设置表头内容居中</span><br><span class="line">设置列合并 <span class="tag">&lt;<span class="name">th</span> <span class="attr">rowspawn</span>=<span class="string">&quot;2&quot;</span>&gt;</span>鸡<span class="tag">&lt;/<span class="name">th</span>&gt;</span> //表头</span><br><span class="line">         <span class="tag">&lt;<span class="name">th</span>&gt;</span>你<span class="tag">&lt;/<span class="name">th</span>&gt;</span>  </span><br><span class="line">         <span class="tag">&lt;<span class="name">th</span>&gt;</span>太<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">th</span>&gt;</span>美<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>   //设置表格内容居中</span><br><span class="line">设置行合并 <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspawn</span>=<span class="string">&quot;2&quot;</span>&gt;</span>你知道<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  //表格</span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>我家哥哥<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>有<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>多努力吗<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>列扩展为将</p><h2 id="布局标签"><a href="#布局标签" class="headerlink" title="布局标签"></a>布局标签</h2><div>    块级标签，占一整行<p><span>  行内标签，占包裹内容de</span></p><h2 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h2><p>action属性：指定表单数据提交的URL，表单项要想提交数据必须指定name属性</p><p>method属性：指定表单提交方式，get或post方式</p><p><strong>(默认值)get：请求参数会拼接在URL后面，长度有限制，仅支持4KB</strong></p><p><strong>post：请求参数会在请求协议的请求体中,长度无限制</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>用户名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>密码<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;userPassword&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;userSex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;userSex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        //选择框名字要保证一致，才能互斥，或者多选</span><br><span class="line">        //记得选择框要给一个value值，改变上传至服务器的值</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;userHobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;旅游&quot;</span>&gt;</span>旅游<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;userHobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;电影&quot;</span>&gt;</span>电影<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;userHobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;游戏&quot;</span>&gt;</span>游戏<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>上传个人证件<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;userInformation&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;userId&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我提交所有内容&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>type取值类型：</p><p>text：任意文本内容</p><p>password：密码内容</p><p>radio：单选选项</p><p>checkBox：复选选项，可以同时选择多个</p><p>file；上传文件</p><p>hidden：隐藏数据输入</p><p>submit：提交按钮</p><p>reset：重置按钮</p><p>button：点击按钮</p><h2 id="表单项标签"><a href="#表单项标签" class="headerlink" title="表单项标签"></a>表单项标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;city&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span> //选项</span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;个人简介&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Select下拉列表</p><p>textarea文本框</p></div>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/JavaWeb/">JavaWeb</category>
      
      
      
    </item>
    
  </channel>
</rss>
